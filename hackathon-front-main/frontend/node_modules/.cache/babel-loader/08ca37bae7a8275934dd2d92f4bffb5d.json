{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';const Bouquet=()=>{const[bouquetInfo,setBouquetInfo]=useState({});const fetchCompletedTasks=async()=>{try{const response=await axios.get('/api/v1/tasks/completed-this-week');calculateBouquet(response.data);}catch(error){console.error('Error fetching completed tasks:',error);}};const calculateBouquet=tasks=>{let studyCount=0;let activityCount=0;let houseworkCount=0;let points=0;tasks.forEach(task=>{const condition=task.flowerStatus;if(condition==='healthy')points+=2;else if(condition==='dying')points+=1;else if(condition==='dead')points+=0;if(task.taskType==='study')studyCount++;else if(task.taskType==='activity')activityCount++;else if(task.taskType==='housework')houseworkCount++;});const totalTasks=tasks.length;console.log(\"Total tasks: \".concat(totalTasks));console.log(\"Points: \".concat(points));const completionRatio=points/(totalTasks*2);const studyRatio=studyCount/totalTasks;const houseworkRatio=houseworkCount/totalTasks;const activityRatio=activityCount/totalTasks;console.log(\"Completion Ratio: \".concat(completionRatio));console.log(\"Study Ratio: \".concat(studyRatio));console.log(\"Housework Ratio: \".concat(houseworkRatio));console.log(\"Activity Ratio: \".concat(activityRatio));let majorityType;// Check if ratios are balanced\nif(studyRatio>=0.25&&studyRatio<=0.45&&houseworkRatio>=0.25&&houseworkRatio<=0.45&&activityRatio>=0.25&&activityRatio<=0.45){majorityType='Balanced';}else{// Create an array of ratios with their corresponding types\nconst ratios=[{type:'Red',ratio:studyRatio},{type:'White',ratio:activityRatio},{type:'Yellow',ratio:houseworkRatio}];// Sort the ratios in descending order\nratios.sort((a,b)=>b.ratio-a.ratio);if(ratios[0].ratio===ratios[1].ratio){// Randomly choose between the top two if there's a tie\nmajorityType=Math.random()<0.5?ratios[0].type:ratios[1].type;}else{// Choose the highest ratio as majorityType\nmajorityType=ratios[0].type;}}const bouquetCondition=completionRatio>0.75?'Healthy':completionRatio>=0.25?'Dying':'Dead';setBouquetInfo({majorityType,bouquetCondition});};useEffect(()=>{fetchCompletedTasks();},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Bouquet\"),/*#__PURE__*/React.createElement(\"p\",null,\"Type: \",bouquetInfo.majorityType),/*#__PURE__*/React.createElement(\"p\",null,\"Condition: \",bouquetInfo.bouquetCondition));};export default Bouquet;","map":{"version":3,"names":["React","useEffect","useState","axios","Bouquet","bouquetInfo","setBouquetInfo","fetchCompletedTasks","response","get","calculateBouquet","data","error","console","tasks","studyCount","activityCount","houseworkCount","points","forEach","task","condition","flowerStatus","taskType","totalTasks","length","log","concat","completionRatio","studyRatio","houseworkRatio","activityRatio","majorityType","ratios","type","ratio","sort","a","b","Math","random","bouquetCondition","createElement"],"sources":["/Users/issey/hackathon/hackathonfinal/hackathon-front-main/src/Bouquet/Bouquet.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Bouquet = () => {\n  const [bouquetInfo, setBouquetInfo] = useState({});\n\n  const fetchCompletedTasks = async () => {\n    try {\n      const response = await axios.get('/api/v1/tasks/completed-this-week');\n      calculateBouquet(response.data);\n    } catch (error) {\n      console.error('Error fetching completed tasks:', error);\n    }\n  };\n\n  const calculateBouquet = (tasks) => {\n    let studyCount = 0;\n    let activityCount = 0;\n    let houseworkCount = 0;\n    let points = 0;\n  \n    tasks.forEach((task) => {\n      const condition = task.flowerStatus;\n      if (condition === 'healthy') points += 2;\n      else if (condition === 'dying') points += 1;\n      else if (condition === 'dead') points += 0;\n  \n      if (task.taskType === 'study') studyCount++;\n      else if (task.taskType === 'activity') activityCount++;\n      else if (task.taskType === 'housework') houseworkCount++;\n    });\n  \n    const totalTasks = tasks.length;\n    console.log(`Total tasks: ${totalTasks}`);\n    console.log(`Points: ${points}`);\n    \n    const completionRatio = points / (totalTasks * 2);\n    const studyRatio = studyCount / totalTasks;\n    const houseworkRatio = houseworkCount / totalTasks;\n    const activityRatio = activityCount / totalTasks;\n  \n    console.log(`Completion Ratio: ${completionRatio}`);\n    console.log(`Study Ratio: ${studyRatio}`);\n    console.log(`Housework Ratio: ${houseworkRatio}`);\n    console.log(`Activity Ratio: ${activityRatio}`);\n  \n    let majorityType;\n  \n    // Check if ratios are balanced\n    if (studyRatio >= 0.25 && studyRatio <= 0.45 &&\n        houseworkRatio >= 0.25 && houseworkRatio <= 0.45 &&\n        activityRatio >= 0.25 && activityRatio <= 0.45) {\n      majorityType = 'Balanced';\n    } else {\n      // Create an array of ratios with their corresponding types\n      const ratios = [\n        { type: 'Red', ratio: studyRatio },\n        { type: 'White', ratio: activityRatio },\n        { type: 'Yellow', ratio: houseworkRatio }\n      ];\n  \n      // Sort the ratios in descending order\n      ratios.sort((a, b) => b.ratio - a.ratio);\n  \n      if (ratios[0].ratio === ratios[1].ratio) {\n        // Randomly choose between the top two if there's a tie\n        majorityType = Math.random() < 0.5 ? ratios[0].type : ratios[1].type;\n      } else {\n        // Choose the highest ratio as majorityType\n        majorityType = ratios[0].type;\n      }\n    }\n  \n    const bouquetCondition = (completionRatio > 0.75) ? 'Healthy' :\n                             (completionRatio >= 0.25) ? 'Dying' : 'Dead';\n  \n    setBouquetInfo({ majorityType, bouquetCondition });\n  };\n  \n  useEffect(() => {\n    fetchCompletedTasks();\n  }, []);\n  \n\n  return (\n    <div>\n      <h1>Bouquet</h1>\n      <p>Type: {bouquetInfo.majorityType}</p>\n      <p>Condition: {bouquetInfo.bouquetCondition}</p>\n    </div>\n  );\n};\n\nexport default Bouquet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}