{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akamurasaki/hackathonfinal/hackathon-front-main/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useEffect,useState}from'react';import axios from'axios';import styled from'@emotion/styled';import background from'./bouquet.jpg';import redHealthy from'./bouquetflowers/Red/redbouquet1.PNG';import redDying from'./bouquetflowers/Red/redbouquet2.PNG';import redDead from'./bouquetflowers/Red/redbouquet3.PNG';import whiteHealthy from'./bouquetflowers/White/whitebouquet1.PNG';import whiteDying from'./bouquetflowers/White/whitebouquet2.PNG';import whiteDead from'./bouquetflowers/White/whitebouquet3.PNG';import yellowHealthy from'./bouquetflowers/Yellow/yellowbouquet1.PNG';import yellowDying from'./bouquetflowers/Yellow/yellowbouquet2.PNG';import yellowDead from'./bouquetflowers/Yellow/yellowbouquet3.PNG';import balancedHealthy from'./bouquetflowers/Balanced/balancebouquet1.PNG';import balancedDying from'./bouquetflowers/Balanced/balancebouquet2.PNG';import balancedDead from'./bouquetflowers/Balanced/balancebouquet3.PNG';import{Button}from'@mui/material';// MUIのButtonをインポート\nconst Bouquet=()=>{const[bouquetInfo,setBouquetInfo]=useState({});const[tooltipVisible,setTooltipVisible]=useState(false);const toggleTooltip=()=>{console.log('Tooltip visible:',tooltipVisible);setTooltipVisible(!tooltipVisible);};const fetchCompletedTasks=async()=>{try{const response=await axios.get('/api/v1/tasks/completed-this-week');if(response.data.length>0){calculateBouquet(response.data);}}catch(error){console.error('Error fetching completed tasks:',error);}};const calculateBouquet=tasks=>{let studyCount=0;let activityCount=0;let houseworkCount=0;let points=0;tasks.forEach(task=>{const condition=task.flowerStatus;console.log(\"Task ID: \".concat(task._id,\", Flower Status: \").concat(condition));if(condition==='healthy')points+=2;else if(condition==='dying')points+=1;else if(condition==='dead')points+=0;if(task.taskType==='study')studyCount++;else if(task.taskType==='activity')activityCount++;else if(task.taskType==='housework')houseworkCount++;});const totalTasks=tasks.length;console.log(\"Total tasks: \".concat(totalTasks));console.log(\"Points: \".concat(points));const completionRatio=points/(totalTasks*2);const studyRatio=studyCount/totalTasks;const houseworkRatio=houseworkCount/totalTasks;const activityRatio=activityCount/totalTasks;console.log(\"Completion Ratio: \".concat(completionRatio));console.log(\"Study Ratio: \".concat(studyRatio));console.log(\"Housework Ratio: \".concat(houseworkRatio));console.log(\"Activity Ratio: \".concat(activityRatio));let majorityType;// Check if ratios are balanced\nif(studyRatio>=0.25&&studyRatio<=0.45&&houseworkRatio>=0.25&&houseworkRatio<=0.45&&activityRatio>=0.25&&activityRatio<=0.45){majorityType='Balanced';}else{// Create an array of ratios with their corresponding types\nconst ratios=[{type:'Red',ratio:studyRatio},{type:'White',ratio:activityRatio},{type:'Yellow',ratio:houseworkRatio}];// Sort the ratios in descending order\nratios.sort((a,b)=>b.ratio-a.ratio);if(ratios[0].ratio===ratios[1].ratio){// Randomly choose between the top two if there's a tie\nmajorityType=Math.random()<0.5?ratios[0].type:ratios[1].type;}else{// Choose the highest ratio as majorityType\nmajorityType=ratios[0].type;}}const bouquetCondition=completionRatio>=0.75?'Healthy':completionRatio>=0.25?'Dying':'Dead';setBouquetInfo({majorityType,bouquetCondition});};useEffect(()=>{fetchCompletedTasks();},[]);const getBouquetImages=(type,bouquetStatus)=>{if(type==='Red'){if(bouquetStatus==='Healthy'){return redHealthy;}else if(bouquetStatus==='Dying'){return redDying;}else if(bouquetStatus==='Dead'){return redDead;}}else if(type==='White'){if(bouquetStatus==='Healthy'){return whiteHealthy;}else if(bouquetStatus==='Dying'){return whiteDying;}else if(bouquetStatus==='Dead'){return whiteDead;}}else if(type==='Yellow'){if(bouquetStatus==='Healthy'){return yellowHealthy;}else if(bouquetStatus==='Dying'){return yellowDying;}else if(bouquetStatus==='Dead'){return yellowDead;}}else{if(bouquetStatus==='Healthy'){return balancedHealthy;}else if(bouquetStatus==='Dying'){return balancedDying;}else if(bouquetStatus==='Dead'){return balancedDead;}}};return/*#__PURE__*/React.createElement(BouquetContainer,null,bouquetInfo.majorityType&&bouquetInfo.bouquetCondition&&/*#__PURE__*/React.createElement(FlowerWrapper,null,/*#__PURE__*/React.createElement(BouquetImage,{src:getBouquetImages(bouquetInfo.majorityType,bouquetInfo.bouquetCondition),alt:\"Bouquet\",onClick:toggleTooltip}),tooltipVisible&&/*#__PURE__*/React.createElement(Tooltip,null,/*#__PURE__*/React.createElement(\"p\",null,\"\\u30AB\\u30C6\\u30B4\\u30EA\\uFF1A\",bouquetInfo.majorityType),/*#__PURE__*/React.createElement(\"p\",null,\"\\u72B6\\u614B\\uFF1A\",bouquetInfo.bouquetCondition),/*#__PURE__*/React.createElement(Button,{variant:\"contained\",onClick:toggleTooltip},\"\\u82B1\\u3092\\u8CFC\\u5165\\u3059\\u308B\"))));};const FlowerWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-block;\\n  margin: 10px;\\n\"])));const Tooltip=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  visibility: visible;\\n  width: 200px;\\n  background-color: white;\\n  color: #000;\\n  text-align: center;\\n  border-radius: 6px;\\n  padding: 5px 0;\\n  position: absolute;\\n  z-index: 1;\\n  bottom: 70%; /* Adjust this value to position the tooltip above the image */\\n  left: 40%;\\n  transform: translateX(-50%);\\n  opacity: 1;\\n\"])));const BouquetContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  width: 100vw;\\n  height: 100vh;\\n  background-image: url(\",\");\\n  background-size: cover;\\n  background-position: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n\"])),background);const BouquetImage=styled.img(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  width: 300px;\\n  height: 300px;\\n  object-fit: cover;\\n  margin-left: -200px;\\n  margin-top: 150px; \\n\"])));export default Bouquet;","map":{"version":3,"names":["React","useEffect","useState","axios","styled","background","redHealthy","redDying","redDead","whiteHealthy","whiteDying","whiteDead","yellowHealthy","yellowDying","yellowDead","balancedHealthy","balancedDying","balancedDead","Button","Bouquet","bouquetInfo","setBouquetInfo","tooltipVisible","setTooltipVisible","toggleTooltip","console","log","fetchCompletedTasks","response","get","data","length","calculateBouquet","error","tasks","studyCount","activityCount","houseworkCount","points","forEach","task","condition","flowerStatus","concat","_id","taskType","totalTasks","completionRatio","studyRatio","houseworkRatio","activityRatio","majorityType","ratios","type","ratio","sort","a","b","Math","random","bouquetCondition","getBouquetImages","bouquetStatus","createElement","BouquetContainer","FlowerWrapper","BouquetImage","src","alt","onClick","Tooltip","variant","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","img","_templateObject4"],"sources":["/Users/akamurasaki/hackathonfinal/hackathon-front-main/frontend/src/Bouquet/Bouquet.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport background from './bouquet.jpg';\nimport redHealthy from './bouquetflowers/Red/redbouquet1.PNG';\nimport redDying from './bouquetflowers/Red/redbouquet2.PNG';\nimport redDead from './bouquetflowers/Red/redbouquet3.PNG';\nimport whiteHealthy from './bouquetflowers/White/whitebouquet1.PNG';\nimport whiteDying from './bouquetflowers/White/whitebouquet2.PNG';\nimport whiteDead from './bouquetflowers/White/whitebouquet3.PNG';\nimport yellowHealthy from './bouquetflowers/Yellow/yellowbouquet1.PNG';\nimport yellowDying from './bouquetflowers/Yellow/yellowbouquet2.PNG';\nimport yellowDead from './bouquetflowers/Yellow/yellowbouquet3.PNG';\nimport balancedHealthy from './bouquetflowers/Balanced/balancebouquet1.PNG';\nimport balancedDying from './bouquetflowers/Balanced/balancebouquet2.PNG';\nimport balancedDead from './bouquetflowers/Balanced/balancebouquet3.PNG';\nimport { Button } from '@mui/material'; // MUIのButtonをインポート\n\nconst Bouquet = () => {\n  const [bouquetInfo, setBouquetInfo] = useState({});\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n\n  const toggleTooltip = () => {\n    console.log('Tooltip visible:', tooltipVisible);\n    setTooltipVisible(!tooltipVisible);\n  };\n\n  const fetchCompletedTasks = async () => {\n    try {\n      const response = await axios.get('/api/v1/tasks/completed-this-week');\n      if (response.data.length > 0){\n        calculateBouquet(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching completed tasks:', error);\n    }\n  };\n\n  const calculateBouquet = (tasks) => {\n    let studyCount = 0;\n    let activityCount = 0;\n    let houseworkCount = 0;\n    let points = 0;\n\n    tasks.forEach((task) => {\n      const condition = task.flowerStatus;\n      console.log(`Task ID: ${task._id}, Flower Status: ${condition}`);\n\n      if (condition === 'healthy') points += 2;\n      else if (condition === 'dying') points += 1;\n      else if (condition === 'dead') points += 0;\n\n      if (task.taskType === 'study') studyCount++;\n      else if (task.taskType === 'activity') activityCount++;\n      else if (task.taskType === 'housework') houseworkCount++;\n    });\n\n    const totalTasks = tasks.length;\n    console.log(`Total tasks: ${totalTasks}`);\n    console.log(`Points: ${points}`);\n\n    const completionRatio = points / (totalTasks * 2);\n    const studyRatio = studyCount / totalTasks;\n    const houseworkRatio = houseworkCount / totalTasks;\n    const activityRatio = activityCount / totalTasks;\n\n    console.log(`Completion Ratio: ${completionRatio}`);\n    console.log(`Study Ratio: ${studyRatio}`);\n    console.log(`Housework Ratio: ${houseworkRatio}`);\n    console.log(`Activity Ratio: ${activityRatio}`);\n\n    let majorityType;\n\n    // Check if ratios are balanced\n    if (studyRatio >= 0.25 && studyRatio <= 0.45 &&\n        houseworkRatio >= 0.25 && houseworkRatio <= 0.45 &&\n        activityRatio >= 0.25 && activityRatio <= 0.45) {\n      majorityType = 'Balanced';\n    } else {\n      // Create an array of ratios with their corresponding types\n      const ratios = [\n        { type: 'Red', ratio: studyRatio },\n        { type: 'White', ratio: activityRatio },\n        { type: 'Yellow', ratio: houseworkRatio }\n      ];\n\n      // Sort the ratios in descending order\n      ratios.sort((a, b) => b.ratio - a.ratio);\n\n      if (ratios[0].ratio === ratios[1].ratio) {\n        // Randomly choose between the top two if there's a tie\n        majorityType = Math.random() < 0.5 ? ratios[0].type : ratios[1].type;\n      } else {\n        // Choose the highest ratio as majorityType\n        majorityType = ratios[0].type;\n      }\n    }\n\n    const bouquetCondition = (completionRatio >= 0.75) ? 'Healthy' :\n                             (completionRatio >= 0.25) ? 'Dying' : 'Dead';\n\n    setBouquetInfo({ majorityType, bouquetCondition });\n  };\n\n  useEffect(() => {\n    fetchCompletedTasks();\n  }, []);\n\n  const getBouquetImages = (type, bouquetStatus) => {\n    if (type === 'Red') {\n      if (bouquetStatus === 'Healthy') {\n        return redHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return redDying;\n      } else if (bouquetStatus === 'Dead') {\n        return redDead;\n      }\n    } else if (type === 'White') {\n      if (bouquetStatus === 'Healthy') {\n        return whiteHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return whiteDying;\n      } else if (bouquetStatus === 'Dead') {\n        return whiteDead;\n      }\n    } else if (type === 'Yellow') {\n      if (bouquetStatus === 'Healthy') {\n        return yellowHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return yellowDying;\n      } else if (bouquetStatus === 'Dead') {\n        return yellowDead;\n      }\n    } else {\n      if (bouquetStatus === 'Healthy') {\n        return balancedHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return balancedDying;\n      } else if (bouquetStatus === 'Dead') {\n        return balancedDead;\n      }\n    }\n  };\n\n  return (\n    <BouquetContainer>\n      {bouquetInfo.majorityType && bouquetInfo.bouquetCondition && (\n        <FlowerWrapper>\n          <BouquetImage\n            src={getBouquetImages(bouquetInfo.majorityType, bouquetInfo.bouquetCondition)}\n            alt=\"Bouquet\"\n            onClick={toggleTooltip}\n          />\n          {tooltipVisible && (\n            <Tooltip>\n              <p>カテゴリ：{bouquetInfo.majorityType}</p>\n              <p>状態：{bouquetInfo.bouquetCondition}</p>\n              <Button variant=\"contained\" onClick={toggleTooltip}>花を購入する</Button>\n            </Tooltip>\n          )}\n        </FlowerWrapper>\n      )}\n    </BouquetContainer>\n  );\n};\n\nconst FlowerWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n  margin: 10px;\n`;\n\nconst Tooltip = styled.div`\n  visibility: visible;\n  width: 200px;\n  background-color: white;\n  color: #000;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  bottom: 70%; /* Adjust this value to position the tooltip above the image */\n  left: 40%;\n  transform: translateX(-50%);\n  opacity: 1;\n`;\n\nconst BouquetContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst BouquetImage = styled.img`\n  width: 300px;\n  height: 300px;\n  object-fit: cover;\n  margin-left: -200px;\n  margin-top: 150px; \n`;\n\nexport default Bouquet;\n"],"mappings":"6QAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,MAAO,CAAAC,UAAU,KAAM,eAAe,CACtC,MAAO,CAAAC,UAAU,KAAM,sCAAsC,CAC7D,MAAO,CAAAC,QAAQ,KAAM,sCAAsC,CAC3D,MAAO,CAAAC,OAAO,KAAM,sCAAsC,CAC1D,MAAO,CAAAC,YAAY,KAAM,0CAA0C,CACnE,MAAO,CAAAC,UAAU,KAAM,0CAA0C,CACjE,MAAO,CAAAC,SAAS,KAAM,0CAA0C,CAChE,MAAO,CAAAC,aAAa,KAAM,4CAA4C,CACtE,MAAO,CAAAC,WAAW,KAAM,4CAA4C,CACpE,MAAO,CAAAC,UAAU,KAAM,4CAA4C,CACnE,MAAO,CAAAC,eAAe,KAAM,+CAA+C,CAC3E,MAAO,CAAAC,aAAa,KAAM,+CAA+C,CACzE,MAAO,CAAAC,YAAY,KAAM,+CAA+C,CACxE,OAASC,MAAM,KAAQ,eAAe,CAAE;AAExC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAClD,KAAM,CAACoB,cAAc,CAAEC,iBAAiB,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAE3D,KAAM,CAAAsB,aAAa,CAAGA,CAAA,GAAM,CAC1BC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEJ,cAAc,CAAC,CAC/CC,iBAAiB,CAAC,CAACD,cAAc,CAAC,CACpC,CAAC,CAED,KAAM,CAAAK,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAzB,KAAK,CAAC0B,GAAG,CAAC,mCAAmC,CAAC,CACrE,GAAID,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAG,CAAC,CAAC,CAC3BC,gBAAgB,CAACJ,QAAQ,CAACE,IAAI,CAAC,CACjC,CACF,CAAE,MAAOG,KAAK,CAAE,CACdR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CAAC,CAED,KAAM,CAAAD,gBAAgB,CAAIE,KAAK,EAAK,CAClC,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClB,GAAI,CAAAC,aAAa,CAAG,CAAC,CACrB,GAAI,CAAAC,cAAc,CAAG,CAAC,CACtB,GAAI,CAAAC,MAAM,CAAG,CAAC,CAEdJ,KAAK,CAACK,OAAO,CAAEC,IAAI,EAAK,CACtB,KAAM,CAAAC,SAAS,CAAGD,IAAI,CAACE,YAAY,CACnCjB,OAAO,CAACC,GAAG,aAAAiB,MAAA,CAAaH,IAAI,CAACI,GAAG,sBAAAD,MAAA,CAAoBF,SAAS,CAAE,CAAC,CAEhE,GAAIA,SAAS,GAAK,SAAS,CAAEH,MAAM,EAAI,CAAC,CAAC,IACpC,IAAIG,SAAS,GAAK,OAAO,CAAEH,MAAM,EAAI,CAAC,CAAC,IACvC,IAAIG,SAAS,GAAK,MAAM,CAAEH,MAAM,EAAI,CAAC,CAE1C,GAAIE,IAAI,CAACK,QAAQ,GAAK,OAAO,CAAEV,UAAU,EAAE,CAAC,IACvC,IAAIK,IAAI,CAACK,QAAQ,GAAK,UAAU,CAAET,aAAa,EAAE,CAAC,IAClD,IAAII,IAAI,CAACK,QAAQ,GAAK,WAAW,CAAER,cAAc,EAAE,CAC1D,CAAC,CAAC,CAEF,KAAM,CAAAS,UAAU,CAAGZ,KAAK,CAACH,MAAM,CAC/BN,OAAO,CAACC,GAAG,iBAAAiB,MAAA,CAAiBG,UAAU,CAAE,CAAC,CACzCrB,OAAO,CAACC,GAAG,YAAAiB,MAAA,CAAYL,MAAM,CAAE,CAAC,CAEhC,KAAM,CAAAS,eAAe,CAAGT,MAAM,EAAIQ,UAAU,CAAG,CAAC,CAAC,CACjD,KAAM,CAAAE,UAAU,CAAGb,UAAU,CAAGW,UAAU,CAC1C,KAAM,CAAAG,cAAc,CAAGZ,cAAc,CAAGS,UAAU,CAClD,KAAM,CAAAI,aAAa,CAAGd,aAAa,CAAGU,UAAU,CAEhDrB,OAAO,CAACC,GAAG,sBAAAiB,MAAA,CAAsBI,eAAe,CAAE,CAAC,CACnDtB,OAAO,CAACC,GAAG,iBAAAiB,MAAA,CAAiBK,UAAU,CAAE,CAAC,CACzCvB,OAAO,CAACC,GAAG,qBAAAiB,MAAA,CAAqBM,cAAc,CAAE,CAAC,CACjDxB,OAAO,CAACC,GAAG,oBAAAiB,MAAA,CAAoBO,aAAa,CAAE,CAAC,CAE/C,GAAI,CAAAC,YAAY,CAEhB;AACA,GAAIH,UAAU,EAAI,IAAI,EAAIA,UAAU,EAAI,IAAI,EACxCC,cAAc,EAAI,IAAI,EAAIA,cAAc,EAAI,IAAI,EAChDC,aAAa,EAAI,IAAI,EAAIA,aAAa,EAAI,IAAI,CAAE,CAClDC,YAAY,CAAG,UAAU,CAC3B,CAAC,IAAM,CACL;AACA,KAAM,CAAAC,MAAM,CAAG,CACb,CAAEC,IAAI,CAAE,KAAK,CAAEC,KAAK,CAAEN,UAAW,CAAC,CAClC,CAAEK,IAAI,CAAE,OAAO,CAAEC,KAAK,CAAEJ,aAAc,CAAC,CACvC,CAAEG,IAAI,CAAE,QAAQ,CAAEC,KAAK,CAAEL,cAAe,CAAC,CAC1C,CAED;AACAG,MAAM,CAACG,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKA,CAAC,CAACH,KAAK,CAAGE,CAAC,CAACF,KAAK,CAAC,CAExC,GAAIF,MAAM,CAAC,CAAC,CAAC,CAACE,KAAK,GAAKF,MAAM,CAAC,CAAC,CAAC,CAACE,KAAK,CAAE,CACvC;AACAH,YAAY,CAAGO,IAAI,CAACC,MAAM,CAAC,CAAC,CAAG,GAAG,CAAGP,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAAGD,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CACtE,CAAC,IAAM,CACL;AACAF,YAAY,CAAGC,MAAM,CAAC,CAAC,CAAC,CAACC,IAAI,CAC/B,CACF,CAEA,KAAM,CAAAO,gBAAgB,CAAIb,eAAe,EAAI,IAAI,CAAI,SAAS,CACpCA,eAAe,EAAI,IAAI,CAAI,OAAO,CAAG,MAAM,CAErE1B,cAAc,CAAC,CAAE8B,YAAY,CAAES,gBAAiB,CAAC,CAAC,CACpD,CAAC,CAED3D,SAAS,CAAC,IAAM,CACd0B,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAkC,gBAAgB,CAAGA,CAACR,IAAI,CAAES,aAAa,GAAK,CAChD,GAAIT,IAAI,GAAK,KAAK,CAAE,CAClB,GAAIS,aAAa,GAAK,SAAS,CAAE,CAC/B,MAAO,CAAAxD,UAAU,CACnB,CAAC,IAAM,IAAIwD,aAAa,GAAK,OAAO,CAAE,CACpC,MAAO,CAAAvD,QAAQ,CACjB,CAAC,IAAM,IAAIuD,aAAa,GAAK,MAAM,CAAE,CACnC,MAAO,CAAAtD,OAAO,CAChB,CACF,CAAC,IAAM,IAAI6C,IAAI,GAAK,OAAO,CAAE,CAC3B,GAAIS,aAAa,GAAK,SAAS,CAAE,CAC/B,MAAO,CAAArD,YAAY,CACrB,CAAC,IAAM,IAAIqD,aAAa,GAAK,OAAO,CAAE,CACpC,MAAO,CAAApD,UAAU,CACnB,CAAC,IAAM,IAAIoD,aAAa,GAAK,MAAM,CAAE,CACnC,MAAO,CAAAnD,SAAS,CAClB,CACF,CAAC,IAAM,IAAI0C,IAAI,GAAK,QAAQ,CAAE,CAC5B,GAAIS,aAAa,GAAK,SAAS,CAAE,CAC/B,MAAO,CAAAlD,aAAa,CACtB,CAAC,IAAM,IAAIkD,aAAa,GAAK,OAAO,CAAE,CACpC,MAAO,CAAAjD,WAAW,CACpB,CAAC,IAAM,IAAIiD,aAAa,GAAK,MAAM,CAAE,CACnC,MAAO,CAAAhD,UAAU,CACnB,CACF,CAAC,IAAM,CACL,GAAIgD,aAAa,GAAK,SAAS,CAAE,CAC/B,MAAO,CAAA/C,eAAe,CACxB,CAAC,IAAM,IAAI+C,aAAa,GAAK,OAAO,CAAE,CACpC,MAAO,CAAA9C,aAAa,CACtB,CAAC,IAAM,IAAI8C,aAAa,GAAK,MAAM,CAAE,CACnC,MAAO,CAAA7C,YAAY,CACrB,CACF,CACF,CAAC,CAED,mBACEjB,KAAA,CAAA+D,aAAA,CAACC,gBAAgB,MACd5C,WAAW,CAAC+B,YAAY,EAAI/B,WAAW,CAACwC,gBAAgB,eACvD5D,KAAA,CAAA+D,aAAA,CAACE,aAAa,mBACZjE,KAAA,CAAA+D,aAAA,CAACG,YAAY,EACXC,GAAG,CAAEN,gBAAgB,CAACzC,WAAW,CAAC+B,YAAY,CAAE/B,WAAW,CAACwC,gBAAgB,CAAE,CAC9EQ,GAAG,CAAC,SAAS,CACbC,OAAO,CAAE7C,aAAc,CACxB,CAAC,CACDF,cAAc,eACbtB,KAAA,CAAA+D,aAAA,CAACO,OAAO,mBACNtE,KAAA,CAAA+D,aAAA,UAAG,gCAAK,CAAC3C,WAAW,CAAC+B,YAAgB,CAAC,cACtCnD,KAAA,CAAA+D,aAAA,UAAG,oBAAG,CAAC3C,WAAW,CAACwC,gBAAoB,CAAC,cACxC5D,KAAA,CAAA+D,aAAA,CAAC7C,MAAM,EAACqD,OAAO,CAAC,WAAW,CAACF,OAAO,CAAE7C,aAAc,EAAC,sCAAc,CAC3D,CAEE,CAED,CAAC,CAEvB,CAAC,CAED,KAAM,CAAAyC,aAAa,CAAG7D,MAAM,CAACoE,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,4EAI/B,CAED,KAAM,CAAAJ,OAAO,CAAGlE,MAAM,CAACoE,GAAG,CAAAG,gBAAA,GAAAA,gBAAA,CAAAD,sBAAA,mVAczB,CAED,KAAM,CAAAV,gBAAgB,CAAG5D,MAAM,CAACoE,GAAG,CAAAI,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,wOAGTrE,UAAU,CAOnC,CAED,KAAM,CAAA6D,YAAY,CAAG9D,MAAM,CAACyE,GAAG,CAAAC,gBAAA,GAAAA,gBAAA,CAAAJ,sBAAA,kHAM9B,CAED,cAAe,CAAAvD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}