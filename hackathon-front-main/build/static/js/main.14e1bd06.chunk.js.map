{"version":3,"sources":["Garden/FlowersIMGFile/Tulip/Blooming.png","Garden/FlowersIMGFile/Tulip/Withered.png","Garden/FlowersIMGFile/Tulip/Half-blooming.png","SignIn/signup-back.jpg","FlowerShop/flower_shop.jpg","Garden/garden_back.jpg","Bouquet/bouquet.jpg","Profile/profile.jpg","SignIn/SignIn.js","DrawerAppBar/DrawerAppBar.js","FlowerShop/FlowerShop.js","Garden/TaskFlower/TaskFlower.js","Garden/Garden.js","Bouquet/Bouquet.js","Profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","AppContainer","styled","div","_templateObject","_taggedTemplateLiteral","background","StyledPaper","Paper","_templateObject2","SignIn","open","setOpen","useState","navigate","useNavigate","handleOpen","prevOpen","React","createElement","Button","variant","onClick","sx","bgcolor","color","Modal","onClose","className","onSubmit","event","preventDefault","Typography","TextField","label","type","drawerWidth","navItems","text","link","DrawerAppBar","props","window","mobileOpen","setMobileOpen","handleDrawerToggle","prevState","drawer","Box","textAlign","Divider","List","map","item","ListItem","key","disablePadding","ListItemButton","component","Link","to","ListItemText","primary","container","undefined","document","body","display","CssBaseline","AppBar","Toolbar","xs","sm","mr","IconButton","aria-label","edge","MenuIcon","flexGrow","handleProfileClick","AccountCircle","Drawer","ModalProps","keepMounted","& .MuiDrawer-paper","boxSizing","width","style","position","top","left","transform","border","boxShadow","FlowerShop","flower","setFlower","setColor","title","setTitle","description","setDescription","duetime","setDueTime","handleClose","backgroundImage","concat","flowerShopBackground","backgroundSize","backgroundPosition","height","Stack","spacing","direction","backgroundColor","aria-labelledby","aria-describedby","id","fullWidth","value","onChange","e","target","mb","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","newValue","renderInput","params","Object","assign","FormControl","InputLabel","Select","labelId","MenuItem","justifyContent","async","axios","post","dueDate","Date","flowerImages","console","log","error","alert","FlowerWrapper","FlowerImage","img","Tooltip","_templateObject3","TaskFlower","_ref","task","index","checkFlowerCondition","refreshTasks","tooltipVisible","setTooltipVisible","src","alt","toggleTooltip","delete","_id","GardenContainer","Content","Garden","tasks","setTasks","fetchTasks","data","getAllTasks","useEffect","interval","setInterval","clearInterval","get","createdAt","timeRatio","Tulip_Withered","Tulip_Blooming","Tulip_Half_Blooming","BouquetContainer","Bouquet","ProfileContainer","ProfileContent","ProfileField","ProfileName","_templateObject4","ProfileEmail","_templateObject5","Line","_templateObject6","Profile","App","Router","Routes","Route","path","element","Fragment","Navigate","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.14e1bd06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Blooming.7037eb81.png\";","module.exports = __webpack_public_path__ + \"static/media/Withered.579cf8ea.png\";","module.exports = __webpack_public_path__ + \"static/media/Half-blooming.7f4aab7c.png\";","module.exports = __webpack_public_path__ + \"static/media/signup-back.9128d8b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flower_shop.21593905.jpg\";","module.exports = __webpack_public_path__ + \"static/media/garden_back.4083601e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bouquet.5d29bd76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/profile.413c3d40.jpg\";","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button, Modal, Paper, TextField, Typography } from '@mui/material';\r\nimport background from './signup-back.jpg'; // 新しい背景画像のパス\r\n\r\nconst SignIn = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleOpen = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleSignIn = (event) => {\r\n    event.preventDefault();\r\n    setOpen(false);\r\n    navigate('/garden'); // ログインボタンでガーデン画面に遷移\r\n  };\r\n\r\n  return (\r\n    <AppContainer>\r\n      <Button variant=\"contained\" onClick={handleOpen} sx={{ bgcolor: '#ffffff', color: '#a9a9a9' }}>ログイン画面へ</Button>\r\n      <Modal open={open} onClose={handleOpen}>\r\n        <StyledPaper>\r\n          <form className='form' onSubmit={handleSignIn}>\r\n            <Typography variant={'h5'}>Sign In</Typography>\r\n            <TextField label=\"Email address\" variant=\"standard\" className=\"text\" />\r\n            <TextField label=\"Password\" variant=\"standard\" className=\"text\" type=\"password\" />\r\n            <center><Button type=\"submit\" className=\"login btn\">Sign In</Button></center>\r\n            <center><Button className=\"signup btn\">register</Button></center>\r\n            <center><Button variant=\"outlined\" onClick={handleOpen}>close</Button></center>\r\n          </form>\r\n        </StyledPaper>\r\n      </Modal>\r\n    </AppContainer>\r\n  );\r\n};\r\n\r\nconst AppContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(${background});\r\n  background-size: cover;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst StyledPaper = styled(Paper)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 960px;\r\n  height: 540px;\r\n  .form {\r\n    width: 60%;\r\n    margin: 3rem;\r\n    text-align: center;\r\n  }\r\n  .text {\r\n    width: 100%;\r\n    margin: 1rem 0;\r\n  }\r\n  .btn {\r\n    width: 60%;\r\n    color: white;\r\n    text-align: center;\r\n    margin: 1.5rem 0;\r\n  }\r\n  .login {\r\n    background-color: #66cdaa;\r\n  }\r\n  .signup {\r\n    background-color: #008080;\r\n  }\r\n`;\r\n\r\nexport default SignIn;\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Divider from '@mui/material/Divider';\r\nimport Drawer from '@mui/material/Drawer';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Button from '@mui/material/Button';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\nconst navItems = [\r\n  { text: 'flower shop', link: '/flower-shop' },\r\n  { text: 'garden', link: '/garden' },\r\n  { text: 'bouquet', link: '/bouquet' }\r\n];\r\n\r\nfunction DrawerAppBar(props) {\r\n  const { window } = props;\r\n  const [mobileOpen, setMobileOpen] = React.useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen((prevState) => !prevState);\r\n  };\r\n\r\n  const handleProfileClick = () => {\r\n    navigate('/profile');\r\n  };\r\n\r\n  const drawer = (\r\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\r\n      <Divider />\r\n      <List>\r\n        {navItems.map((item) => (\r\n          <ListItem key={item.text} disablePadding>\r\n            <ListItemButton component={Link} to={item.link} sx={{ textAlign: 'center' }}>\r\n              <ListItemText primary={item.text} />\r\n            </ListItemButton>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n\r\n  const container = window !== undefined ? () => window().document.body : undefined;\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex' }}>\r\n      <CssBaseline />\r\n      <AppBar component=\"nav\" sx={{ bgcolor: '#ffffff' }}> {/* AppBarの色を設定 */}\r\n        <Toolbar>\r\n          <Box sx={{ display: { xs: 'none', sm: 'block' }, mr: 2 }}>\r\n            {navItems.map((item) => (\r\n              <Button key={item.text} component={Link} to={item.link} sx={{ color: '#a9a9a9' }}>\r\n                {item.text}\r\n              </Button>\r\n            ))}\r\n          </Box>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            sx={{ mr: 2, display: { sm: 'none' }, color: '#a9a9a9' }} // メニューアイコンの色を設定\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Box sx={{ flexGrow: 1 }} />\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"account\"\r\n            edge=\"end\"\r\n            onClick={handleProfileClick} // プロフィール画面に遷移\r\n            sx={{ color: '#a9a9a9' }} // アカウントアイコンの色を設定\r\n          >\r\n            <AccountCircle />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav>\r\n        <Drawer\r\n          container={container}\r\n          variant=\"temporary\"\r\n          open={mobileOpen}\r\n          onClose={handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n          sx={{\r\n            display: { xs: 'block', sm: 'none' },\r\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\r\n          }}\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n      </nav>\r\n      <Box component=\"main\" sx={{ p: 3 }}>\r\n        <Toolbar />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nDrawerAppBar.propTypes = {\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default DrawerAppBar;\r\n","import React, { useState } from 'react';\r\nimport { Button, Stack, Modal, Box, TextField, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\r\nimport axios from 'axios';\r\nimport flowerShopBackground from './flower_shop.jpg';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nfunction FlowerShop() {\r\n  const [open, setOpen] = useState(false);\r\n  const [flower, setFlower] = useState('');\r\n  const [color, setColor] = useState('');\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [duetime, setDueTime] = useState(null);\r\n\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const handleSubmit = async () => {\r\n    if (!title || !description || !duetime || !flower || !color) {\r\n      alert('入力していない項目があります');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post('/api/v1/task', {\r\n        title,\r\n        description,\r\n        dueDate: new Date(duetime),\r\n        flower,\r\n        color,\r\n        flowerImages: 'tulip',\r\n      });\r\n      console.log('タスクを作成しました');\r\n      handleClose();\r\n    } catch (error) {\r\n      console.error('Error creating task:', error);\r\n      alert('タスクの作成に失敗しました');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ \r\n      backgroundImage: `url(${flowerShopBackground})`, \r\n      backgroundSize: 'cover', \r\n      backgroundPosition: 'center', \r\n      height: '100vh', \r\n      position: 'relative' \r\n    }}>\r\n      <Stack spacing={2} direction=\"row\" sx={{ position: 'absolute', top: '65%', left: '67%', transform: 'translate(-50%, -50%)' }}>\r\n        <Button variant=\"contained\" onClick={handleOpen} sx={{ backgroundColor: '#ffffff', color: '#a9a9a9' }}>タスクを作成</Button>      \r\n      </Stack>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-title\"\r\n        aria-describedby=\"modal-description\"\r\n      >\r\n        <Box sx={style}>\r\n          <h2 id=\"modal-title\">タスク作成</h2>\r\n          <TextField \r\n            fullWidth \r\n            label=\"タスク名\" \r\n            variant=\"standard\" \r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            sx={{ mb: 2 }} \r\n          />\r\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <DateTimePicker\r\n              label=\"期限\"\r\n              value={duetime}\r\n              onChange={(newValue) => setDueTime(newValue)}\r\n              renderInput={(params) => <TextField {...params} fullWidth sx={{ mb: 2 }} />}\r\n            />\r\n          </LocalizationProvider>\r\n          <TextField \r\n            fullWidth \r\n            label=\"コメント\" \r\n            variant=\"standard\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            sx={{ mb: 2 }} \r\n          />\r\n          <FormControl variant=\"standard\" fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel id=\"flower-label\">花の名前</InputLabel>\r\n            <Select\r\n              labelId=\"flower-label\"\r\n              id=\"flower-select\"\r\n              value={flower}\r\n              onChange={(e) => setFlower(e.target.value)}\r\n              label=\"花の名前\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"tulip\">チューリップ</MenuItem>\r\n              <MenuItem value=\"marguerite\">マーガレット</MenuItem>\r\n              <MenuItem value=\"rose\">バラ</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl variant=\"standard\" fullWidth sx={{ mb: 2 }}>\r\n            <InputLabel id=\"color-label\">色</InputLabel>\r\n            <Select\r\n              labelId=\"color-label\"\r\n              id=\"color-select\"\r\n              value={color}\r\n              onChange={(e) => setColor(e.target.value)}\r\n              label=\"色\"\r\n            >\r\n              <MenuItem value=\"\">\r\n                <em>None</em>\r\n              </MenuItem>\r\n              <MenuItem value=\"red\">赤</MenuItem>\r\n              <MenuItem value=\"blue\">青</MenuItem>\r\n              <MenuItem value=\"yellow\">黄色</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\r\n            <Button variant=\"contained\" onClick={handleSubmit} sx={{ backgroundColor: '#ffffff', color: '#a9a9a9' }}>タスク作成</Button>        \r\n          </Stack>\r\n        </Box>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FlowerShop;\r\n","import React, { useState } from 'react';\r\nimport { Button } from '@mui/material';\r\nimport styled from '@emotion/styled';\r\nimport axios from 'axios';\r\n\r\nconst TaskFlower = ({ task, index, checkFlowerCondition, refreshTasks }) => {\r\n  const [tooltipVisible, setTooltipVisible] = useState(false);\r\n\r\n  const toggleTooltip = () => {\r\n    setTooltipVisible(!tooltipVisible);\r\n  };\r\n\r\n  const deleteTask = async () => {\r\n    try {\r\n      await axios.delete(`/api/v1/task/${task._id}`);\r\n      console.log('タスクを削除しました');\r\n      refreshTasks(); // 修正: タスクをリフレッシュ\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n      alert('タスクの削除に失敗しました');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <FlowerWrapper>\r\n      <FlowerImage\r\n        index={index}\r\n        src={checkFlowerCondition(task)} // 修正: タスクの状態をチェックして画像を取得\r\n        alt={task.flower}\r\n        onClick={toggleTooltip} // 修正: マウスオーバーでツールチップを表示\r\n        //onMouseLeave={toggleTooltip} // 修正: マウスアウトでツールチップを非表示\r\n      />\r\n      {tooltipVisible && (\r\n        <Tooltip>\r\n          <p>タイトル：{task.title}</p>\r\n          <p>内容：{task.description}</p>\r\n          <p>期限：{task.dueDate}</p>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={deleteTask}>削除</Button>\r\n        </Tooltip>\r\n      )}\r\n    </FlowerWrapper>\r\n  );\r\n};\r\n\r\nconst FlowerWrapper = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  margin: 10px;\r\n`;\r\n\r\nconst FlowerImage = styled.img`\r\n  width: 150px;\r\n  height: 150px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Tooltip = styled.div`\r\n  visibility: visible;\r\n  width: 200px;\r\n  background-color: black;\r\n  color: #fff;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 5px 0;\r\n  position: absolute;\r\n  z-index: 1;\r\n  bottom: 125%; /* 画像の上にツールチップを配置 */\r\n  left: 50%;\r\n  margin-left: -100px;\r\n  opacity: 1;\r\n  transition: opacity 0.3s;\r\n`;\r\n\r\nexport default TaskFlower;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport background from './garden_back.jpg'; // 修正した背景画像のパス\r\nimport axios from 'axios';\r\nimport TaskFlower from './TaskFlower/TaskFlower'; // 修正したインポートパス\r\n\r\nimport Tulip_Blooming from './FlowersIMGFile/Tulip/Blooming.png';\r\nimport Tulip_Half_Blooming from './FlowersIMGFile/Tulip/Half-blooming.png';\r\nimport Tulip_Withered from './FlowersIMGFile/Tulip/Withered.png';\r\n\r\nconst Garden = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const fetchTasks = async () => {\r\n    const data = await getAllTasks();\r\n    setTasks(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    const interval = setInterval(fetchTasks, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getAllTasks = async () => {\r\n    try {\r\n      const response = await axios.get('/api/v1/tasks');\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error getting all tasks:', error);\r\n      return [];\r\n    }\r\n  };\r\n  \r\n  const checkFlowerImage = (flowerImages) => {\r\n    if (flowerImages === 'tulip') {\r\n      return Tulip_Blooming;\r\n    } else if (flowerImages === 'Tulip_Half_Blooming') {\r\n      return Tulip_Half_Blooming;\r\n    } else if (flowerImages === 'Tulip_Withered') {\r\n      return Tulip_Withered;\r\n    } else {\r\n      return Tulip_Blooming;\r\n    }\r\n  };\r\n\r\n  const checkFlowerCondition = (task) => {\r\n    const BloomingTime = 0.5;\r\n  \r\n    const dueDate = new Date(task.dueDate);\r\n    const createdAt = new Date(task.createdAt); // 修正: タスクの作成日を取得\r\n    const now = new Date();\r\n  \r\n    const diffTime = (dueDate - createdAt); // 修正: タスクの作成日から期限までの時間\r\n    const limitTime = (dueDate - now); // 修正: 現在から期限までの時間\r\n    const timeRatio = limitTime / diffTime;\r\n  \r\n    console.log(timeRatio);\r\n  \r\n    if (timeRatio > 1.0) {\r\n      console.log('Tulip_Withered');\r\n      return Tulip_Withered;\r\n    } else if (timeRatio >= BloomingTime && timeRatio <= 1.0) {\r\n      console.log('HELOOOO');\r\n      console.log('Tulip_Blooming');\r\n      return Tulip_Blooming;\r\n    } else if (timeRatio < BloomingTime && timeRatio > 0) {\r\n      console.log('Tulip_Half_Blooming');\r\n      return Tulip_Half_Blooming;\r\n    } else {\r\n      console.log('Tulip_Withered');\r\n      return Tulip_Withered;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GardenContainer>\r\n      <Content>\r\n        {tasks.map((task, index) => (\r\n          <TaskFlower \r\n            key={task._id} \r\n            task={task} \r\n            index={index} \r\n            checkFlowerCondition={checkFlowerCondition} // 修正済みの関数を渡す\r\n            refreshTasks={fetchTasks} // 修正: 子コンポーネントにリフレッシュ関数を渡す\r\n          />\r\n        ))}\r\n      </Content>\r\n    </GardenContainer>\r\n  );\r\n};\r\n\r\nconst GardenContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(${background});\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-align: center;\r\n  color: white;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 20px;\r\n`;\r\n\r\nexport default Garden;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport background from './bouquet.jpg'; // 背景画像のパス\r\n\r\nconst Bouquet = () => {\r\n  return (\r\n    <BouquetContainer>\r\n      <Content>\r\n        {/*<h1>Welcome to the Bouquet Page</h1>*/}\r\n        {/* 他のコンテンツをここに追加 */}\r\n      </Content>\r\n    </BouquetContainer>\r\n  );\r\n};\r\n\r\nconst BouquetContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(${background});\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  text-align: center;\r\n  color: white; /* テキストを見やすくするために色を設定 */\r\n`;\r\n\r\nexport default Bouquet;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport background from './profile.jpg'; // 背景画像のパス\r\n\r\nconst Profile = () => {\r\n  // ここでユーザー情報を取得する\r\n  const userName = \"User Name\"; // 例：取得したユーザー名\r\n  const userEmail = \"user@example.com\"; // 例：取得したユーザーのメールアドレス\r\n\r\n  return (\r\n    <ProfileContainer>\r\n      <ProfileContent>\r\n        <ProfileField>\r\n          <ProfileName>{userName}</ProfileName>\r\n          <Line />\r\n        </ProfileField>\r\n        <ProfileField>\r\n          <ProfileEmail>{userEmail}</ProfileEmail>\r\n          <Line />\r\n        </ProfileField>\r\n      </ProfileContent>\r\n    </ProfileContainer>\r\n  );\r\n};\r\n\r\nconst ProfileContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-image: url(${background});\r\n  background-size: cover;\r\n  background-position: center;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProfileContent = styled.div`\r\n  text-align: center;\r\n  color: black; /* テキストを見やすくするために色を設定 */\r\n`;\r\n\r\nconst ProfileField = styled.div`\r\n  position: relative;\r\n  margin: 20px 0;\r\n`;\r\n\r\nconst ProfileName = styled.div`\r\n  font-size: 20px;\r\n  position: absolute;\r\n  top: -80px; /* 線の上に表示されるように調整 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst ProfileEmail = styled.div`\r\n  font-size: 18px;\r\n  position: absolute;\r\n  top: 80px; /* 線の上に表示されるように調整 */\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\nconst Line = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: black;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\r\nimport SignIn from './SignIn/SignIn';\r\nimport DrawerAppBar from './DrawerAppBar/DrawerAppBar';\r\nimport FlowerShop from './FlowerShop/FlowerShop';\r\nimport Garden from './Garden/Garden';\r\nimport Bouquet from './Bouquet/Bouquet';\r\nimport Profile from './Profile/Profile'; // プロフィール画面をインポート\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/sign-in\" element={<SignIn />} />\r\n        <Route\r\n          path=\"/*\"\r\n          element={\r\n            <>\r\n              <DrawerAppBar />\r\n              <Routes>\r\n                <Route path=\"/flower-shop\" element={<FlowerShop />} />\r\n                <Route path=\"/garden\" element={<Garden />} />\r\n                <Route path=\"/bouquet\" element={<Bouquet />} />\r\n                <Route path=\"/profile\" element={<Profile />} /> {/* プロフィール画面 */}\r\n                <Route path=\"/\" element={<Navigate to=\"/flower-shop\" />} /> {/* Default route after login */}\r\n              </Routes>\r\n            </>\r\n          }\r\n        />\r\n        <Route path=\"/\" element={<Navigate to=\"/sign-in\" />} /> {/* 初期ルートをログイン画面にリダイレクト */}\r\n        <Route path=\"*\" element={<Navigate to=\"/sign-in\" />} /> {/* 未定義ルートもログイン画面にリダイレクト */}\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}