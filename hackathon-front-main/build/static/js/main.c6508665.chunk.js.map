{"version":3,"sources":["Garden/FlowersIMGFile/Tulip/Blooming.png","Garden/FlowersIMGFile/Tulip/Half-blooming.png","Garden/FlowersIMGFile/Tulip/Withered.png","SignIn/signup-back.jpg","FlowerShop/flower_shop.jpg","Garden/garden_back.jpg","Bouquet/bouquet.jpg","Bouquet/bouquetflowers/Red/redbouquet1.PNG","Bouquet/bouquetflowers/Red/redbouquet2.PNG","Bouquet/bouquetflowers/Red/redbouquet3.PNG","Bouquet/bouquetflowers/White/whitebouquet1.PNG","Bouquet/bouquetflowers/White/whitebouquet2.PNG","Bouquet/bouquetflowers/White/whitebouquet3.PNG","Bouquet/bouquetflowers/Yellow/yellowbouquet1.PNG","Bouquet/bouquetflowers/Yellow/yellowbouquet2.PNG","Bouquet/bouquetflowers/Yellow/yellowbouquet3.PNG","Bouquet/bouquetflowers/Balanced/balancebouquet1.PNG","Bouquet/bouquetflowers/Balanced/balancebouquet2.PNG","Bouquet/bouquetflowers/Balanced/balancebouquet3.PNG","Profile/profile.jpg","SignIn/SignIn.js","DrawerAppBar/DrawerAppBar.js","FlowerShop/FlowerShop.js","Garden/TaskFlower/TaskFlower.js","Garden/Garden.js","Bouquet/Bouquet.js","Profile/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","AppContainer","styled","div","_templateObject","_taggedTemplateLiteral","background","StyledPaper","Paper","_templateObject2","SignIn","open","setOpen","useState","username","setUsername","password","setPassword","error","setError","navigate","useNavigate","handleOpen","React","createElement","Button","variant","onClick","Modal","onClose","className","onSubmit","async","event","preventDefault","response","axios","post","localStorage","setItem","data","token","_error$response","_error$response$data","message","Typography","color","TextField","label","value","onChange","e","target","type","navItems","text","link","DrawerAppBar","props","window","mobileOpen","setMobileOpen","handleDrawerToggle","prevState","drawer","Box","sx","textAlign","Divider","List","map","item","ListItem","key","disablePadding","ListItemButton","component","Link","to","ListItemText","primary","container","undefined","document","body","display","CssBaseline","AppBar","bgcolor","Toolbar","xs","sm","mr","IconButton","aria-label","edge","MenuIcon","flexGrow","handleProfileClick","AccountCircle","Drawer","ModalProps","keepMounted","boxSizing","width","p","style","position","top","left","transform","border","boxShadow","FlowerShop","tasks","setTasks","flower","setFlower","setColor","title","setTitle","description","setDescription","duetime","setDueTime","taskType","setTaskType","fetchTasks","getItem","get","headers","Authorization","concat","console","useEffect","handleClose","backgroundImage","flowerShopBackground","backgroundSize","backgroundPosition","height","Stack","spacing","direction","backgroundColor","aria-labelledby","aria-describedby","id","fullWidth","mb","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","newValue","renderInput","params","Object","assign","FormControl","InputLabel","Select","labelId","MenuItem","justifyContent","dueDate","Date","flowerImages","log","alert","task","_id","FlowerWrapper","FlowerImage","img","Tooltip","_templateObject3","TaskFlower","_ref","index","checkFlowerCondition","refreshTasks","tooltipVisible","setTooltipVisible","src","flowerStatus","Tulip_Blooming","Tulip_Half_Blooming","Tulip_Withered","alt","toggleTooltip","put","completedAt","isCompleted","delete","GardenContainer","Content","Garden","getAllTasks","filter","interval","setInterval","clearInterval","createdAt","timeRatio","BouquetContainer","BouquetImage","Bouquet","bouquetInfo","setBouquetInfo","calculateBouquet","studyCount","activityCount","houseworkCount","points","forEach","condition","totalTasks","length","completionRatio","studyRatio","houseworkRatio","activityRatio","majorityType","ratios","ratio","sort","a","b","Math","random","bouquetCondition","fetchCompletedTasks","getBouquetImages","bouquetStatus","redHealthy","redDying","redDead","whiteHealthy","whiteDying","whiteDead","yellowHealthy","yellowDying","yellowDead","balancedHealthy","balancedDying","balancedDead","ProfileContainer","ProfileContent","ProfileField","ProfileName","_templateObject4","ProfileEmail","_templateObject5","Line","_templateObject6","Profile","App","Router","Routes","Route","path","element","Fragment","Navigate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c6508665.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Blooming.7037eb81.png\";","module.exports = __webpack_public_path__ + \"static/media/Half-blooming.7f4aab7c.png\";","module.exports = __webpack_public_path__ + \"static/media/Withered.579cf8ea.png\";","module.exports = __webpack_public_path__ + \"static/media/signup-back.9128d8b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flower_shop.21593905.jpg\";","module.exports = __webpack_public_path__ + \"static/media/garden_back.4083601e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bouquet.5d29bd76.jpg\";","module.exports = __webpack_public_path__ + \"static/media/redbouquet1.bb75a8cc.PNG\";","module.exports = __webpack_public_path__ + \"static/media/redbouquet2.ebcdae83.PNG\";","module.exports = __webpack_public_path__ + \"static/media/redbouquet3.24100032.PNG\";","module.exports = __webpack_public_path__ + \"static/media/whitebouquet1.e91254ca.PNG\";","module.exports = __webpack_public_path__ + \"static/media/whitebouquet2.c3a8355c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/whitebouquet3.61554c52.PNG\";","module.exports = __webpack_public_path__ + \"static/media/yellowbouquet1.2aabfd45.PNG\";","module.exports = __webpack_public_path__ + \"static/media/yellowbouquet2.344ef54c.PNG\";","module.exports = __webpack_public_path__ + \"static/media/yellowbouquet3.bb721d22.PNG\";","module.exports = __webpack_public_path__ + \"static/media/balancebouquet1.0711bb0e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/balancebouquet2.4b6a07a7.PNG\";","module.exports = __webpack_public_path__ + \"static/media/balancebouquet3.344b599a.PNG\";","module.exports = __webpack_public_path__ + \"static/media/profile.413c3d40.jpg\";","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, Modal, Paper, TextField, Typography } from '@mui/material';\nimport styled from '@emotion/styled';\nimport { useNavigate } from 'react-router-dom';\nimport background from './signup-back.jpg';\n\nconst SignIn = () => {\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleOpen = () => {\n    setOpen(!open);\n    setError(''); // Clear previous errors when opening modal\n  };\n\n  const handleSignIn = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/api/auth/login', { username, password });\n      localStorage.setItem('token', response.data.token);\n      navigate('/flower-shop');\n    } catch (error) {\n      setError('ログインに失敗しました: ' + (error.response?.data?.error || error.message));\n    }\n  };\n\n  return (\n    <AppContainer>\n      <Button variant=\"contained\" onClick={handleOpen}>ログイン画面へ</Button>\n      <Modal open={open} onClose={handleOpen}>\n        <StyledPaper>\n          <form className=\"form\" onSubmit={handleSignIn}>\n            <Typography variant=\"h5\">Sign In</Typography>\n            {error && <Typography color=\"error\">{error}</Typography>}\n            <TextField \n              label=\"Username\" \n              variant=\"standard\" \n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"text\" \n            />\n            <TextField \n              label=\"Password\" \n              variant=\"standard\" \n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"text\" \n            />\n            <center>\n              <Button type=\"submit\" className=\"login btn\">Sign In</Button>\n            </center>\n          </form>\n        </StyledPaper>\n      </Modal>\n    </AppContainer>\n  );\n};\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${background});\n  background-size: cover;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledPaper = styled(Paper)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 960px;\n  height: 540px;\n  .form {\n    width: 60%;\n    margin: 3rem;\n    text-align: center;\n  }\n  .text {\n    width: 100%;\n    margin: 1rem 0;\n  }\n  .btn {\n    width: 60%;\n    color: white;\n    text-align: center;\n    margin: 1.5rem 0;\n  }\n  .login {\n    background-color: #66cdaa;\n  }\n`;\n\nexport default SignIn;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Divider from '@mui/material/Divider';\nimport Drawer from '@mui/material/Drawer';\nimport IconButton from '@mui/material/IconButton';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemText from '@mui/material/ListItemText';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Toolbar from '@mui/material/Toolbar';\nimport Button from '@mui/material/Button';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst drawerWidth = 240;\nconst navItems = [\n  { text: 'flower shop', link: '/flower-shop' },\n  { text: 'garden', link: '/garden' },\n  { text: 'bouquet', link: '/bouquet' }\n];\n\nfunction DrawerAppBar(props) {\n  const { window } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  const navigate = useNavigate();\n\n  const handleDrawerToggle = () => {\n    setMobileOpen((prevState) => !prevState);\n  };\n\n  const handleProfileClick = () => {\n    navigate('/profile');\n  };\n\n  const drawer = (\n    <Box onClick={handleDrawerToggle} sx={{ textAlign: 'center' }}>\n      <Divider />\n      <List>\n        {navItems.map((item) => (\n          <ListItem key={item.text} disablePadding>\n            <ListItemButton component={Link} to={item.link} sx={{ textAlign: 'center' }}>\n              <ListItemText primary={item.text} />\n            </ListItemButton>\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <Box sx={{ display: 'flex' }}>\n      <CssBaseline />\n      <AppBar component=\"nav\" sx={{ bgcolor: '#ffffff' }}> {/* AppBarの色を設定 */}\n        <Toolbar>\n          <Box sx={{ display: { xs: 'none', sm: 'block' }, mr: 2 }}>\n            {navItems.map((item) => (\n              <Button key={item.text} component={Link} to={item.link} sx={{ color: '#a9a9a9' }}>\n                {item.text}\n              </Button>\n            ))}\n          </Box>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            sx={{ mr: 2, display: { sm: 'none' }, color: '#a9a9a9' }} // メニューアイコンの色を設定\n          >\n            <MenuIcon />\n          </IconButton>\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"account\"\n            edge=\"end\"\n            onClick={handleProfileClick} // プロフィール画面に遷移\n            sx={{ color: '#a9a9a9' }} // アカウントアイコンの色を設定\n          >\n            <AccountCircle />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <nav>\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          open={mobileOpen}\n          onClose={handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true, // Better open performance on mobile.\n          }}\n          sx={{\n            display: { xs: 'block', sm: 'none' },\n            '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </nav>\n      <Box component=\"main\" sx={{ p: 3 }}>\n        <Toolbar />\n      </Box>\n    </Box>\n  );\n}\n\nDrawerAppBar.propTypes = {\n  window: PropTypes.func,\n};\n\nexport default DrawerAppBar;\n","// src/FlowerShop.js\nimport React, { useState, useEffect } from 'react';\nimport { Button, Stack, Modal, Box, TextField, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport axios from 'axios';\nimport flowerShopBackground from './flower_shop.jpg';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4,\n};\n\nfunction FlowerShop() {\n  const [open, setOpen] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [flower, setFlower] = useState('');\n  const [color, setColor] = useState('');\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [duetime, setDueTime] = useState(null);\n  const [taskType, setTaskType] = useState('');\n\n  const fetchTasks = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('/api/v1/tasks', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const handleSubmit = async () => {\n    if (!title || !description || !duetime || !flower || !color || !taskType) {\n      alert('You have missing input');\n      return;\n    }\n\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('/api/v1/task', {\n        title,\n        description,\n        dueDate: new Date(duetime),\n        flower,\n        color,\n        flowerImages: 'tulip',\n        taskType,\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      console.log('タスクを作成しました');\n      handleClose();\n      fetchTasks(); // タスクを再取得\n    } catch (error) {\n      console.error('Error creating task:', error);\n      if (error.response && error.response.data.message === 'Error') {\n        alert('You already have 8 tasks. Let\\'s complete one before adding more');\n      } else {\n        alert('タスクの作成に失敗しました');\n      }\n    }\n  };\n\n  return (\n    <div style={{ \n      backgroundImage: `url(${flowerShopBackground})`, \n      backgroundSize: 'cover', \n      backgroundPosition: 'center', \n      height: '100vh', \n      position: 'relative' \n    }}>\n      <Stack spacing={2} direction=\"row\" sx={{ position: 'absolute', top: '65%', left: '67%', transform: 'translate(-50%, -50%)' }}>\n        <Button variant=\"contained\" onClick={handleOpen} sx={{ backgroundColor: '#ffffff', color: '#a9a9a9' }}>タスクを作成</Button>      \n      </Stack>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box sx={style}>\n          <h2 id=\"modal-title\">タスク作成</h2>\n          <TextField \n            fullWidth \n            label=\"タスク名\" \n            variant=\"standard\" \n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            sx={{ mb: 2 }} \n          />\n          <LocalizationProvider dateAdapter={AdapterDayjs}>\n            <DateTimePicker\n              label=\"期限\"\n              value={duetime}\n              onChange={(newValue) => setDueTime(newValue)}\n              renderInput={(params) => <TextField {...params} fullWidth sx={{ mb: 2 }} />}\n            />\n          </LocalizationProvider>\n          <TextField \n            fullWidth \n            label=\"コメント\" \n            variant=\"standard\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            sx={{ mb: 2 }} \n          />\n          <FormControl variant=\"standard\" fullWidth sx={{ mb: 2 }}>\n            <InputLabel id=\"flower-label\">花の名前</InputLabel>\n            <Select\n              labelId=\"flower-label\"\n              id=\"flower-select\"\n              value={flower}\n              onChange={(e) => setFlower(e.target.value)}\n              label=\"花の名前\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value=\"tulip\">チューリップ</MenuItem>\n              <MenuItem value=\"marguerite\">マーガレット</MenuItem>\n              <MenuItem value=\"rose\">バラ</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl variant=\"standard\" fullWidth sx={{ mb: 2 }}>\n            <InputLabel id=\"color-label\">色</InputLabel>\n            <Select\n              labelId=\"color-label\"\n              id=\"color-select\"\n              value={color}\n              onChange={(e) => setColor(e.target.value)}\n              label=\"色\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value=\"red\">赤</MenuItem>\n              <MenuItem value=\"blue\">青</MenuItem>\n              <MenuItem value=\"yellow\">黄色</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl variant=\"standard\" fullWidth sx={{ mb: 2 }}>\n            <InputLabel id=\"taskType-label\">タスクタイプ</InputLabel>\n            <Select\n              labelId=\"taskType-label\"\n              id=\"taskType-select\"\n              value={taskType}\n              onChange={(e) => setTaskType(e.target.value)}\n              label=\"タスクタイプ\"\n            >\n              <MenuItem value=\"\">\n                <em>None</em>\n              </MenuItem>\n              <MenuItem value=\"study\">勉強</MenuItem>\n              <MenuItem value=\"housework\">家事</MenuItem>\n              <MenuItem value=\"activity\">活動</MenuItem>\n            </Select>\n          </FormControl>\n          <Stack spacing={2} direction=\"row\" justifyContent=\"center\">\n            <Button variant=\"contained\" onClick={handleSubmit} sx={{ backgroundColor: '#ffffff', color: '#a9a9a9' }}>タスク作成</Button>        \n          </Stack>\n        </Box>\n      </Modal>\n      <div>\n        {tasks.map(task => (\n          <div key={task._id}>\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default FlowerShop;\n","\nimport React, { useState } from 'react';\nimport { Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\n\nimport Tulip_Blooming from '../FlowersIMGFile/Tulip/Blooming.png';\nimport Tulip_Half_Blooming from '../FlowersIMGFile/Tulip/Half-blooming.png';\nimport Tulip_Withered from '../FlowersIMGFile/Tulip/Withered.png';\n\nconst TaskFlower = ({ task, index, checkFlowerCondition, refreshTasks }) => {\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n\n  const toggleTooltip = () => {\n    setTooltipVisible(!tooltipVisible);\n  };\n\n  const deleteTask = async () => {\n    try {\n      await axios.delete(`/api/v1/task/${task._id}`);\n      console.log('タスクを削除しました');\n      refreshTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      alert('タスクの削除に失敗しました');\n    }\n  };\n\n  const markAsCompleted = async () => {\n    try {\n      const flowerStatus = checkFlowerCondition(task);\n      await axios.put(`/api/v1/task/complete/${task._id}`, {\n        flowerStatus,\n        taskType: task.taskType,\n        completedAt: new Date(),\n        isCompleted: true,\n      });\n      console.log('タスクを完了しました');\n      refreshTasks();\n    } catch (error) {\n      console.error('Error marking task as completed:', error);\n      alert('タスクの完了に失敗しました');\n    }\n  };\n\n  const getFlowerImage = (flowerStatus) => {\n    if (flowerStatus === 'healthy') {\n      return Tulip_Blooming;\n    } else if (flowerStatus === 'dying') {\n      return Tulip_Half_Blooming;\n    } else {\n      return Tulip_Withered;\n    }\n  };\n\n  return (\n    <FlowerWrapper>\n      <FlowerImage\n        index={index}\n        src={getFlowerImage(checkFlowerCondition(task))}\n        alt={task.flower}\n        onClick={toggleTooltip}\n      />\n      {tooltipVisible && (\n        <Tooltip>\n          <p>タイトル：{task.title}</p>\n          <p>内容：{task.description}</p>\n          <p>期限：{task.dueDate}</p>\n          <Button variant=\"contained\" color=\"primary\" onClick={markAsCompleted}>完了</Button>\n          <Button variant=\"contained\" color=\"secondary\" onClick={deleteTask}>削除</Button>\n        </Tooltip>\n      )}\n    </FlowerWrapper>\n  );\n};\n\nconst FlowerWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n  margin: 10px;\n`;\n\nconst FlowerImage = styled.img`\n  width: 150px;\n  height: 150px;\n  cursor: pointer;\n`;\n\nconst Tooltip = styled.div`\n  visibility: visible;\n  width: 200px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  bottom: 125%;\n  left: 50%;\n  margin-left: -100px;\n  opacity: 1;\n  transition: opacity 0.3s;\n`;\n\nexport default TaskFlower;\n","\nimport React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport background from './garden_back.jpg';\nimport axios from 'axios';\nimport TaskFlower from './TaskFlower/TaskFlower';\n\nimport Tulip_Blooming from './FlowersIMGFile/Tulip/Blooming.png';\nimport Tulip_Half_Blooming from './FlowersIMGFile/Tulip/Half-blooming.png';\nimport Tulip_Withered from './FlowersIMGFile/Tulip/Withered.png';\n\nconst Garden = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const fetchTasks = async () => {\n    const data = await getAllTasks();\n    setTasks(data.filter(task => !task.completedAt)); // Filter out completed tasks\n  };\n\n  useEffect(() => {\n    fetchTasks();\n    const interval = setInterval(fetchTasks, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getAllTasks = async () => {\n    try {\n      const response = await axios.get('/api/v1/tasks');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting all tasks:', error);\n      return [];\n    }\n  };\n\n  const checkFlowerCondition = (task) => {\n    if (task.completedAt) {\n      return task.flowerStatus; // Return the current flower status if the task is completed\n    }\n    const BloomingTime = 0.5;\n\n    const dueDate = new Date(task.dueDate);\n    const createdAt = new Date(task.createdAt);\n    const now = new Date();\n\n    const diffTime = (dueDate - createdAt);\n    const limitTime = (dueDate - now);\n    const timeRatio = limitTime / diffTime;\n\n    console.log(timeRatio);\n\n    if (timeRatio > 1.0) {\n      console.log('dead');\n      return 'dead';\n    } else if (timeRatio >= BloomingTime && timeRatio <= 1.0) {\n      console.log('healthy');\n      return 'healthy';\n    } else if (timeRatio < BloomingTime && timeRatio > 0) {\n      console.log('dying');\n      return 'dying';\n    } else {\n      console.log('dead');\n      return 'dead';\n    }\n  };\n\n  return (\n    <GardenContainer>\n      <Content>\n        {tasks.map((task, index) => (\n          <TaskFlower\n            key={task._id}\n            task={task}\n            index={index}\n            checkFlowerCondition={checkFlowerCondition}\n            refreshTasks={fetchTasks}\n          />\n        ))}\n      </Content>\n    </GardenContainer>\n  );\n};\n\nconst GardenContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  text-align: center;\n  color: white;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport default Garden;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport styled from '@emotion/styled';\nimport background from './bouquet.jpg';\nimport redHealthy from './bouquetflowers/Red/redbouquet1.PNG';\nimport redDying from './bouquetflowers/Red/redbouquet2.PNG';\nimport redDead from './bouquetflowers/Red/redbouquet3.PNG';\nimport whiteHealthy from './bouquetflowers/White/whitebouquet1.PNG';\nimport whiteDying from './bouquetflowers/White/whitebouquet2.PNG';\nimport whiteDead from './bouquetflowers/White/whitebouquet3.PNG';\nimport yellowHealthy from './bouquetflowers/Yellow/yellowbouquet1.PNG';\nimport yellowDying from './bouquetflowers/Yellow/yellowbouquet2.PNG';\nimport yellowDead from './bouquetflowers/Yellow/yellowbouquet3.PNG';\nimport balancedHealthy from './bouquetflowers/Balanced/balancebouquet1.PNG';\nimport balancedDying from './bouquetflowers/Balanced/balancebouquet2.PNG';\nimport balancedDead from './bouquetflowers/Balanced/balancebouquet3.PNG';\n\nconst Bouquet = () => {\n  const [bouquetInfo, setBouquetInfo] = useState({});\n\n  const fetchCompletedTasks = async () => {\n    try {\n      const response = await axios.get('/api/v1/tasks/completed-this-week');\n      if (response.data.length > 0){\n        calculateBouquet(response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching completed tasks:', error);\n    }\n  };\n\n  const calculateBouquet = (tasks) => {\n    let studyCount = 0;\n    let activityCount = 0;\n    let houseworkCount = 0;\n    let points = 0;\n\n    tasks.forEach((task) => {\n      const condition = task.flowerStatus;\n      console.log(`Task ID: ${task._id}, Flower Status: ${condition}`);\n\n      if (condition === 'healthy') points += 2;\n      else if (condition === 'dying') points += 1;\n      else if (condition === 'dead') points += 0;\n\n      if (task.taskType === 'study') studyCount++;\n      else if (task.taskType === 'activity') activityCount++;\n      else if (task.taskType === 'housework') houseworkCount++;\n    });\n\n    const totalTasks = tasks.length;\n    console.log(`Total tasks: ${totalTasks}`);\n    console.log(`Points: ${points}`);\n\n    const completionRatio = points / (totalTasks * 2);\n    const studyRatio = studyCount / totalTasks;\n    const houseworkRatio = houseworkCount / totalTasks;\n    const activityRatio = activityCount / totalTasks;\n\n    console.log(`Completion Ratio: ${completionRatio}`);\n    console.log(`Study Ratio: ${studyRatio}`);\n    console.log(`Housework Ratio: ${houseworkRatio}`);\n    console.log(`Activity Ratio: ${activityRatio}`);\n\n    let majorityType;\n\n    // Check if ratios are balanced\n    if (studyRatio >= 0.25 && studyRatio <= 0.45 &&\n        houseworkRatio >= 0.25 && houseworkRatio <= 0.45 &&\n        activityRatio >= 0.25 && activityRatio <= 0.45) {\n      majorityType = 'Balanced';\n    } else {\n      // Create an array of ratios with their corresponding types\n      const ratios = [\n        { type: 'Red', ratio: studyRatio },\n        { type: 'White', ratio: activityRatio },\n        { type: 'Yellow', ratio: houseworkRatio }\n      ];\n\n      // Sort the ratios in descending order\n      ratios.sort((a, b) => b.ratio - a.ratio);\n\n      if (ratios[0].ratio === ratios[1].ratio) {\n        // Randomly choose between the top two if there's a tie\n        majorityType = Math.random() < 0.5 ? ratios[0].type : ratios[1].type;\n      } else {\n        // Choose the highest ratio as majorityType\n        majorityType = ratios[0].type;\n      }\n    }\n\n    const bouquetCondition = (completionRatio >= 0.75) ? 'Healthy' :\n                             (completionRatio >= 0.25) ? 'Dying' : 'Dead';\n\n    setBouquetInfo({ majorityType, bouquetCondition });\n  };\n\n  useEffect(() => {\n    fetchCompletedTasks();\n  }, []);\n\n  const getBouquetImages = (type, bouquetStatus) => {\n    if (type === 'Red') {\n      if (bouquetStatus === 'Healthy') {\n        return redHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return redDying;\n      } else if (bouquetStatus === 'Dead') {\n        return redDead;\n      }\n    } else if (type === 'White') {\n      if (bouquetStatus === 'Healthy') {\n        return whiteHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return whiteDying;\n      } else if (bouquetStatus === 'Dead') {\n        return whiteDead;\n      }\n    } else if (type === 'Yellow') {\n      if (bouquetStatus === 'Healthy') {\n        return yellowHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return yellowDying;\n      } else if (bouquetStatus === 'Dead') {\n        return yellowDead;\n      }\n    } else {\n      if (bouquetStatus === 'Healthy') {\n        return balancedHealthy;\n      } else if (bouquetStatus === 'Dying') {\n        return balancedDying;\n      } else if (bouquetStatus === 'Dead') {\n        return balancedDead;\n      }\n    }\n  };\n\n  return (\n    <BouquetContainer>\n      {bouquetInfo.majorityType && bouquetInfo.bouquetCondition && (\n        <BouquetImage\n          src={getBouquetImages(bouquetInfo.majorityType, bouquetInfo.bouquetCondition)}\n          alt=\"Bouquet\"\n        />\n      )}\n      <div>\n        <h1>Bouquet</h1>\n        <p>Type: {bouquetInfo.majorityType}</p>\n        <p>Condition: {bouquetInfo.bouquetCondition}</p>\n      </div>\n    </BouquetContainer>\n  );\n};\n\nconst BouquetContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\nconst BouquetImage = styled.img`\n  width: 150px;\n  height: 150px;\n  cursor: pointer;\n`;\n\nexport default Bouquet;\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport background from './profile.jpg'; // 背景画像のパス\n\nconst Profile = () => {\n  // ここでユーザー情報を取得する\n  const userName = \"User Name\"; // 例：取得したユーザー名\n  const userEmail = \"user@example.com\"; // 例：取得したユーザーのメールアドレス\n\n  return (\n    <ProfileContainer>\n      <ProfileContent>\n        <ProfileField>\n          <ProfileName>{userName}</ProfileName>\n          <Line />\n        </ProfileField>\n        <ProfileField>\n          <ProfileEmail>{userEmail}</ProfileEmail>\n          <Line />\n        </ProfileField>\n      </ProfileContent>\n    </ProfileContainer>\n  );\n};\n\nconst ProfileContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ProfileContent = styled.div`\n  text-align: center;\n  color: black; /* テキストを見やすくするために色を設定 */\n`;\n\nconst ProfileField = styled.div`\n  position: relative;\n  margin: 20px 0;\n`;\n\nconst ProfileName = styled.div`\n  font-size: 20px;\n  position: absolute;\n  top: -80px; /* 線の上に表示されるように調整 */\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nconst ProfileEmail = styled.div`\n  font-size: 18px;\n  position: absolute;\n  top: 80px; /* 線の上に表示されるように調整 */\n  left: 50%;\n  transform: translateX(-50%);\n`;\n\nconst Line = styled.div`\n  width: 100%;\n  height: 1px;\n  background-color: black;\n  margin: 0 auto;\n`;\n\nexport default Profile;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport SignIn from './SignIn/SignIn';\nimport DrawerAppBar from './DrawerAppBar/DrawerAppBar';\nimport FlowerShop from './FlowerShop/FlowerShop';\nimport Garden from './Garden/Garden';\nimport Bouquet from './Bouquet/Bouquet';\nimport Profile from './Profile/Profile'; // プロフィール画面をインポート\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/sign-in\" element={<SignIn />} />\n        <Route\n          path=\"/*\"\n          element={\n            <>\n              <DrawerAppBar />\n              <Routes>\n                <Route path=\"/flower-shop\" element={<FlowerShop />} />\n                <Route path=\"/garden\" element={<Garden />} />\n                <Route path=\"/bouquet\" element={<Bouquet />} />\n                <Route path=\"/profile\" element={<Profile />} /> {/* プロフィール画面 */}\n                <Route path=\"/\" element={<Navigate to=\"/flower-shop\" />} /> {/* Default route after login */}\n              </Routes>\n            </>\n          }\n        />\n        <Route path=\"/\" element={<Navigate to=\"/sign-in\" />} /> {/* 初期ルートをログイン画面にリダイレクト */}\n        <Route path=\"*\" element={<Navigate to=\"/sign-in\" />} /> {/* 未定義ルートもログイン画面にリダイレクト */}\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}