{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/issey/hackathon/hackathonfinal/hackathon-front-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import React,{useEffect,useState}from'react';import styled from'@emotion/styled';import background from'./garden_back.jpg';// 修正した背景画像のパス\nimport axios from'axios';import TaskFlower from'./TaskFlower/TaskFlower';// 修正したインポートパス\nimport Tulip_Blooming from'./FlowersIMGFile/Tulip/Blooming.png';import Tulip_Half_Blooming from'./FlowersIMGFile/Tulip/Half-blooming.png';import Tulip_Withered from'./FlowersIMGFile/Tulip/Withered.png';const Garden=()=>{const[tasks,setTasks]=useState([]);const fetchTasks=async()=>{const data=await getAllTasks();setTasks(data);};useEffect(()=>{fetchTasks();const interval=setInterval(fetchTasks,5000);return()=>clearInterval(interval);},[]);const getAllTasks=async()=>{try{const response=await axios.get('/api/v1/tasks');return response.data;}catch(error){console.error('Error getting all tasks:',error);return[];}};const checkFlowerImage=flowerImages=>{if(flowerImages==='tulip'){return Tulip_Blooming;}else if(flowerImages==='Tulip_Half_Blooming'){return Tulip_Half_Blooming;}else if(flowerImages==='Tulip_Withered'){return Tulip_Withered;}else{return Tulip_Blooming;}};const checkFlowerCondition=task=>{const BloomingTime=0.5;const dueDate=new Date(task.dueDate);const createdAt=new Date(task.createdAt);// 修正: タスクの作成日を取得\nconst now=new Date();const diffTime=dueDate-createdAt;// 修正: タスクの作成日から期限までの時間\nconst limitTime=dueDate-now;// 修正: 現在から期限までの時間\nconst timeRatio=limitTime/diffTime;console.log(timeRatio);if(timeRatio>1.0){console.log('Tulip_Withered');return Tulip_Withered;}else if(timeRatio>=BloomingTime&&timeRatio<=1.0){console.log('Tulip_Blooming');return Tulip_Blooming;}else if(timeRatio<BloomingTime&&timeRatio>0){console.log('Tulip_Half_Blooming');return Tulip_Half_Blooming;}else{console.log('Tulip_Withered');return Tulip_Withered;}};return/*#__PURE__*/React.createElement(GardenContainer,null,/*#__PURE__*/React.createElement(Content,null,tasks.map((task,index)=>/*#__PURE__*/React.createElement(TaskFlower,{key:task._id,task:task,index:index,checkFlowerCondition:checkFlowerCondition// 修正済みの関数を渡す\n,refreshTasks:fetchTasks// 修正: 子コンポーネントにリフレッシュ関数を渡す\n}))));};const GardenContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100vw;\\n  height: 100vh;\\n  background-image: url(\",\");\\n  background-size: cover;\\n  background-position: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])),background);const Content=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  color: white;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  gap: 20px;\\n\"])));export default Garden;","map":{"version":3,"names":["React","useEffect","useState","styled","background","axios","TaskFlower","Tulip_Blooming","Tulip_Half_Blooming","Tulip_Withered","Garden","tasks","setTasks","fetchTasks","data","getAllTasks","interval","setInterval","clearInterval","response","get","error","console","checkFlowerImage","flowerImages","checkFlowerCondition","task","BloomingTime","dueDate","Date","createdAt","now","diffTime","limitTime","timeRatio","log","createElement","GardenContainer","Content","map","index","key","_id","refreshTasks","div","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sources":["/Users/issey/hackathon/hackathonfinal/hackathon-front-main/src/Garden/Garden.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport background from './garden_back.jpg'; // 修正した背景画像のパス\nimport axios from 'axios';\nimport TaskFlower from './TaskFlower/TaskFlower'; // 修正したインポートパス\n\nimport Tulip_Blooming from './FlowersIMGFile/Tulip/Blooming.png';\nimport Tulip_Half_Blooming from './FlowersIMGFile/Tulip/Half-blooming.png';\nimport Tulip_Withered from './FlowersIMGFile/Tulip/Withered.png';\n\nconst Garden = () => {\n  const [tasks, setTasks] = useState([]);\n\n  const fetchTasks = async () => {\n    const data = await getAllTasks();\n    setTasks(data);\n  };\n\n  useEffect(() => {\n    fetchTasks();\n    const interval = setInterval(fetchTasks, 5000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const getAllTasks = async () => {\n    try {\n      const response = await axios.get('/api/v1/tasks');\n      return response.data;\n    } catch (error) {\n      console.error('Error getting all tasks:', error);\n      return [];\n    }\n  };\n  \n  const checkFlowerImage = (flowerImages) => {\n    if (flowerImages === 'tulip') {\n      return Tulip_Blooming;\n    } else if (flowerImages === 'Tulip_Half_Blooming') {\n      return Tulip_Half_Blooming;\n    } else if (flowerImages === 'Tulip_Withered') {\n      return Tulip_Withered;\n    } else {\n      return Tulip_Blooming;\n    }\n  };\n\n  const checkFlowerCondition = (task) => {\n    const BloomingTime = 0.5;\n  \n    const dueDate = new Date(task.dueDate);\n    const createdAt = new Date(task.createdAt); // 修正: タスクの作成日を取得\n    const now = new Date();\n  \n    const diffTime = (dueDate - createdAt); // 修正: タスクの作成日から期限までの時間\n    const limitTime = (dueDate - now); // 修正: 現在から期限までの時間\n    const timeRatio = limitTime / diffTime;\n  \n    console.log(timeRatio);\n  \n    if (timeRatio > 1.0) {\n      console.log('Tulip_Withered');\n      return Tulip_Withered;\n    } else if (timeRatio >= BloomingTime && timeRatio <= 1.0) {\n      console.log('Tulip_Blooming');\n      return Tulip_Blooming;\n    } else if (timeRatio < BloomingTime && timeRatio > 0) {\n      console.log('Tulip_Half_Blooming');\n      return Tulip_Half_Blooming;\n    } else {\n      console.log('Tulip_Withered');\n      return Tulip_Withered;\n    }\n  };\n\n  return (\n    <GardenContainer>\n      <Content>\n        {tasks.map((task, index) => (\n          <TaskFlower \n            key={task._id} \n            task={task} \n            index={index} \n            checkFlowerCondition={checkFlowerCondition} // 修正済みの関数を渡す\n            refreshTasks={fetchTasks} // 修正: 子コンポーネントにリフレッシュ関数を渡す\n          />\n        ))}\n      </Content>\n    </GardenContainer>\n  );\n};\n\nconst GardenContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  text-align: center;\n  color: white;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport default Garden;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}