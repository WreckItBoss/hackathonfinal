{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from'axios';const Bouquet=()=>{const[bouquetInfo,setBouquetInfo]=useState({});const fetchCompletedTasks=async()=>{try{const response=await axios.get('/api/v1/tasks/completed-this-week');calculateBouquet(response.data);}catch(error){console.error('Error fetching completed tasks:',error);}};const calculateBouquet=tasks=>{let studyCount=0;let activityCount=0;let houseworkCount=0;let healthyCount=0;let dyingCount=0;let deadCount=0;tasks.forEach(task=>{const condition=task.flowerStatus;if(condition==='healthy')healthyCount++;else if(condition==='dying')dyingCount++;else if(condition==='dead')deadCount++;if(task.taskType==='study')studyCount++;else if(task.taskType==='activity')activityCount++;else if(task.taskType==='housework')houseworkCount++;});const totalTasks=tasks.length;const majorityType=studyCount>=activityCount&&studyCount>=houseworkCount?'Red':activityCount>=studyCount&&activityCount>=houseworkCount?'White':'Yellow';const completionRatio=healthyCount/totalTasks;const bouquetCondition=completionRatio>0.75?'Healthy':completionRatio>=0.25?'Dying':'Dead';setBouquetInfo({majorityType,bouquetCondition});};useEffect(()=>{fetchCompletedTasks();},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Bouquet\"),/*#__PURE__*/React.createElement(\"p\",null,\"Type: \",bouquetInfo.majorityType),/*#__PURE__*/React.createElement(\"p\",null,\"Condition: \",bouquetInfo.bouquetCondition));};export default Bouquet;","map":{"version":3,"names":["React","useEffect","useState","axios","Bouquet","bouquetInfo","setBouquetInfo","fetchCompletedTasks","response","get","calculateBouquet","data","error","console","tasks","studyCount","activityCount","houseworkCount","healthyCount","dyingCount","deadCount","forEach","task","condition","flowerStatus","taskType","totalTasks","length","majorityType","completionRatio","bouquetCondition","createElement"],"sources":["/Users/issey/hackathon/hackathonfinal/hackathon-front-main/src/Bouquet/Bouquet.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Bouquet = () => {\n  const [bouquetInfo, setBouquetInfo] = useState({});\n\n  const fetchCompletedTasks = async () => {\n    try {\n      const response = await axios.get('/api/v1/tasks/completed-this-week');\n      calculateBouquet(response.data);\n    } catch (error) {\n      console.error('Error fetching completed tasks:', error);\n    }\n  };\n\n  const calculateBouquet = (tasks) => {\n    let studyCount = 0;\n    let activityCount = 0;\n    let houseworkCount = 0;\n    let healthyCount = 0;\n    let dyingCount = 0;\n    let deadCount = 0;\n\n    tasks.forEach((task) => {\n      const condition = task.flowerStatus;\n      if (condition === 'healthy') healthyCount++;\n      else if (condition === 'dying') dyingCount++;\n      else if (condition === 'dead') deadCount++;\n\n      if (task.taskType === 'study') studyCount++;\n      else if (task.taskType === 'activity') activityCount++;\n      else if (task.taskType === 'housework') houseworkCount++;\n    });\n\n    const totalTasks = tasks.length;\n    const majorityType = (studyCount >= activityCount && studyCount >= houseworkCount) ? 'Red' :\n                         (activityCount >= studyCount && activityCount >= houseworkCount) ? 'White' : 'Yellow';\n    const completionRatio = healthyCount / totalTasks;\n    const bouquetCondition = (completionRatio > 0.75) ? 'Healthy' :\n                             (completionRatio >= 0.25) ? 'Dying' : 'Dead';\n\n    setBouquetInfo({ majorityType, bouquetCondition });\n  };\n\n  useEffect(() => {\n    fetchCompletedTasks();\n  }, []);\n\n  return (\n    <div>\n      <h1>Bouquet</h1>\n      <p>Type: {bouquetInfo.majorityType}</p>\n      <p>Condition: {bouquetInfo.bouquetCondition}</p>\n    </div>\n  );\n};\n\nexport default Bouquet;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAElD,KAAM,CAAAK,mBAAmB,CAAG,KAAAA,CAAA,GAAY,CACtC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,GAAG,CAAC,mCAAmC,CAAC,CACrEC,gBAAgB,CAACF,QAAQ,CAACG,IAAI,CAAC,CACjC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,CAAEA,KAAK,CAAC,CACzD,CACF,CAAC,CAED,KAAM,CAAAF,gBAAgB,CAAII,KAAK,EAAK,CAClC,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClB,GAAI,CAAAC,aAAa,CAAG,CAAC,CACrB,GAAI,CAAAC,cAAc,CAAG,CAAC,CACtB,GAAI,CAAAC,YAAY,CAAG,CAAC,CACpB,GAAI,CAAAC,UAAU,CAAG,CAAC,CAClB,GAAI,CAAAC,SAAS,CAAG,CAAC,CAEjBN,KAAK,CAACO,OAAO,CAAEC,IAAI,EAAK,CACtB,KAAM,CAAAC,SAAS,CAAGD,IAAI,CAACE,YAAY,CACnC,GAAID,SAAS,GAAK,SAAS,CAAEL,YAAY,EAAE,CAAC,IACvC,IAAIK,SAAS,GAAK,OAAO,CAAEJ,UAAU,EAAE,CAAC,IACxC,IAAII,SAAS,GAAK,MAAM,CAAEH,SAAS,EAAE,CAE1C,GAAIE,IAAI,CAACG,QAAQ,GAAK,OAAO,CAAEV,UAAU,EAAE,CAAC,IACvC,IAAIO,IAAI,CAACG,QAAQ,GAAK,UAAU,CAAET,aAAa,EAAE,CAAC,IAClD,IAAIM,IAAI,CAACG,QAAQ,GAAK,WAAW,CAAER,cAAc,EAAE,CAC1D,CAAC,CAAC,CAEF,KAAM,CAAAS,UAAU,CAAGZ,KAAK,CAACa,MAAM,CAC/B,KAAM,CAAAC,YAAY,CAAIb,UAAU,EAAIC,aAAa,EAAID,UAAU,EAAIE,cAAc,CAAI,KAAK,CACpED,aAAa,EAAID,UAAU,EAAIC,aAAa,EAAIC,cAAc,CAAI,OAAO,CAAG,QAAQ,CAC1G,KAAM,CAAAY,eAAe,CAAGX,YAAY,CAAGQ,UAAU,CACjD,KAAM,CAAAI,gBAAgB,CAAID,eAAe,CAAG,IAAI,CAAI,SAAS,CACnCA,eAAe,EAAI,IAAI,CAAI,OAAO,CAAG,MAAM,CAErEvB,cAAc,CAAC,CAAEsB,YAAY,CAAEE,gBAAiB,CAAC,CAAC,CACpD,CAAC,CAED7B,SAAS,CAAC,IAAM,CACdM,mBAAmB,CAAC,CAAC,CACvB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,KAAA,CAAA+B,aAAA,yBACE/B,KAAA,CAAA+B,aAAA,WAAI,SAAW,CAAC,cAChB/B,KAAA,CAAA+B,aAAA,UAAG,QAAM,CAAC1B,WAAW,CAACuB,YAAgB,CAAC,cACvC5B,KAAA,CAAA+B,aAAA,UAAG,aAAW,CAAC1B,WAAW,CAACyB,gBAAoB,CAC5C,CAAC,CAEV,CAAC,CAED,cAAe,CAAA1B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}