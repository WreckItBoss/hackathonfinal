{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akamurasaki/Desktop/hackathonfinal/hackathon-front-main/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3;import React from'react';import{Button}from'@mui/material';import styled from'@emotion/styled';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskFlower=_ref=>{let{task,index,checkFlowerImage,refreshTasks}=_ref;const deleteTask=async()=>{try{await axios.delete(\"/api/v1/task/\".concat(task._id));console.log('タスクを削除しました');refreshTasks();// タスクリストをリフレッシュ\n}catch(error){console.error('Error deleting task:',error);alert('タスクの削除に失敗しました');}};return/*#__PURE__*/_jsxs(FlowerWrapper,{children:[/*#__PURE__*/_jsx(FlowerImage,{index:index,src:checkFlowerImage(task.flowerImages),alt:task.flower}),/*#__PURE__*/_jsxs(Tooltip,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u30BF\\u30A4\\u30C8\\u30EB\\uFF1A\",task.title]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u5185\\u5BB9\\uFF1A\",task.description]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u671F\\u9650\\uFF1A\",task.dueDate]}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:deleteTask,children:\"\\u524A\\u9664\"})]})]});};const FlowerWrapper=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  position: relative;\\n  display: inline-block;\\n  margin: 10px;\\n  &:hover .tooltip {\\n    visibility: visible;\\n    opacity: 1;\\n  }\\n\"])));const FlowerImage=styled.img(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 150px;\\n  height: 150px;\\n  cursor: pointer;\\n\"])));const Tooltip=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  visibility: hidden;\\n  width: 200px;\\n  background-color: black;\\n  color: #fff;\\n  text-align: center;\\n  border-radius: 6px;\\n  padding: 5px 0;\\n  position: absolute;\\n  z-index: 1;\\n  bottom: 125%; /* \\u753B\\u50CF\\u306E\\u4E0A\\u306B\\u30C4\\u30FC\\u30EB\\u30C1\\u30C3\\u30D7\\u3092\\u914D\\u7F6E */\\n  left: 50%;\\n  margin-left: -100px;\\n  opacity: 0;\\n  transition: opacity 0.3s;\\n\"])));export default TaskFlower;","map":{"version":3,"names":["React","Button","styled","axios","jsx","_jsx","jsxs","_jsxs","TaskFlower","_ref","task","index","checkFlowerImage","refreshTasks","deleteTask","delete","concat","_id","console","log","error","alert","FlowerWrapper","children","FlowerImage","src","flowerImages","alt","flower","Tooltip","title","description","dueDate","variant","color","onClick","div","_templateObject","_taggedTemplateLiteral","img","_templateObject2","_templateObject3"],"sources":["/Users/akamurasaki/Desktop/hackathonfinal/hackathon-front-main/src/Garden/TaskFlower/TaskFlower.js"],"sourcesContent":["import React from 'react';\nimport { Button } from '@mui/material';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\n\nconst TaskFlower = ({ task, index, checkFlowerImage, refreshTasks }) => {\n\n  const deleteTask = async () => {\n    try {\n      await axios.delete(`/api/v1/task/${task._id}`);\n      console.log('タスクを削除しました');\n      refreshTasks(); // タスクリストをリフレッシュ\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      alert('タスクの削除に失敗しました');\n    }\n  };\n\n  return (\n    <FlowerWrapper>\n      <FlowerImage\n        index={index}\n        src={checkFlowerImage(task.flowerImages)}\n        alt={task.flower}\n      />\n      <Tooltip>\n        <p>タイトル：{task.title}</p>\n        <p>内容：{task.description}</p>\n        <p>期限：{task.dueDate}</p>\n        <Button variant=\"contained\" color=\"primary\" onClick={deleteTask}>削除</Button>\n      </Tooltip>\n    </FlowerWrapper>\n  );\n};\n\nconst FlowerWrapper = styled.div`\n  position: relative;\n  display: inline-block;\n  margin: 10px;\n  &:hover .tooltip {\n    visibility: visible;\n    opacity: 1;\n  }\n`;\n\nconst FlowerImage = styled.img`\n  width: 150px;\n  height: 150px;\n  cursor: pointer;\n`;\n\nconst Tooltip = styled.div`\n  visibility: hidden;\n  width: 200px;\n  background-color: black;\n  color: #fff;\n  text-align: center;\n  border-radius: 6px;\n  padding: 5px 0;\n  position: absolute;\n  z-index: 1;\n  bottom: 125%; /* 画像の上にツールチップを配置 */\n  left: 50%;\n  margin-left: -100px;\n  opacity: 0;\n  transition: opacity 0.3s;\n`;\n\nexport default TaskFlower;\n"],"mappings":"0NAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,eAAe,CACtC,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAqD,IAApD,CAAEC,IAAI,CAAEC,KAAK,CAAEC,gBAAgB,CAAEC,YAAa,CAAC,CAAAJ,IAAA,CAEjE,KAAM,CAAAK,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAX,KAAK,CAACY,MAAM,iBAAAC,MAAA,CAAiBN,IAAI,CAACO,GAAG,CAAE,CAAC,CAC9CC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,CACzBN,YAAY,CAAC,CAAC,CAAE;AAClB,CAAE,MAAOO,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC5CC,KAAK,CAAC,eAAe,CAAC,CACxB,CACF,CAAC,CAED,mBACEd,KAAA,CAACe,aAAa,EAAAC,QAAA,eACZlB,IAAA,CAACmB,WAAW,EACVb,KAAK,CAAEA,KAAM,CACbc,GAAG,CAAEb,gBAAgB,CAACF,IAAI,CAACgB,YAAY,CAAE,CACzCC,GAAG,CAAEjB,IAAI,CAACkB,MAAO,CAClB,CAAC,cACFrB,KAAA,CAACsB,OAAO,EAAAN,QAAA,eACNhB,KAAA,MAAAgB,QAAA,EAAG,gCAAK,CAACb,IAAI,CAACoB,KAAK,EAAI,CAAC,cACxBvB,KAAA,MAAAgB,QAAA,EAAG,oBAAG,CAACb,IAAI,CAACqB,WAAW,EAAI,CAAC,cAC5BxB,KAAA,MAAAgB,QAAA,EAAG,oBAAG,CAACb,IAAI,CAACsB,OAAO,EAAI,CAAC,cACxB3B,IAAA,CAACJ,MAAM,EAACgC,OAAO,CAAC,WAAW,CAACC,KAAK,CAAC,SAAS,CAACC,OAAO,CAAErB,UAAW,CAAAS,QAAA,CAAC,cAAE,CAAQ,CAAC,EACrE,CAAC,EACG,CAAC,CAEpB,CAAC,CAED,KAAM,CAAAD,aAAa,CAAGpB,MAAM,CAACkC,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,kJAQ/B,CAED,KAAM,CAAAd,WAAW,CAAGtB,MAAM,CAACqC,GAAG,CAAAC,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,iEAI7B,CAED,KAAM,CAAAT,OAAO,CAAG3B,MAAM,CAACkC,GAAG,CAAAK,gBAAA,GAAAA,gBAAA,CAAAH,sBAAA,mYAezB,CAED,cAAe,CAAA9B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}