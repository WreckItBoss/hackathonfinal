{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/akamurasaki/Desktop/hackathonfinal/hackathon-front-main/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React,{useEffect,useState}from'react';import styled from'@emotion/styled';import background from'./garden_back.jpg';import axios from'axios';import TaskFlower from'./TaskFlower/TaskFlower';import Tulip_Blooming from'./FlowersIMGFile/Tulip/Blooming.png';import Tulip_Half_Blooming from'./FlowersIMGFile/Tulip/Half-blooming.png';import Tulip_Withered from'./FlowersIMGFile/Tulip/Withered.png';import{jsx as _jsx}from\"react/jsx-runtime\";const getAllTasks=async()=>{try{const response=await axios.get('/api/v1/tasks');return response.data;}catch(error){console.error('Error getting all tasks:',error);return[];}};const checkFlowerImage=flowerImages=>{if(flowerImages==='tulip'){return Tulip_Blooming;}else if(flowerImages==='Tulip_Half_Blooming'){return Tulip_Half_Blooming;}else if(flowerImages==='Tulip_Withered'){return Tulip_Withered;}else{return Tulip_Blooming;}};const Garden=()=>{const[tasks,setTasks]=useState([]);useEffect(()=>{const fetchTasks=async()=>{const data=await getAllTasks();setTasks(data);};fetchTasks();},[]);return/*#__PURE__*/_jsx(GardenContainer,{children:/*#__PURE__*/_jsx(Content,{children:tasks.map((task,index)=>/*#__PURE__*/_jsx(TaskFlower,{task:task,index:index,checkFlowerImage:checkFlowerImage},index))})});};const GardenContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100vw;\\n  height: 100vh;\\n  background-image: url(\",\");\\n  background-size: cover;\\n  background-position: center;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])),background);const Content=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  color: white;\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  gap: 20px;\\n\"])));export default Garden;","map":{"version":3,"names":["React","useEffect","useState","styled","background","axios","TaskFlower","Tulip_Blooming","Tulip_Half_Blooming","Tulip_Withered","jsx","_jsx","getAllTasks","response","get","data","error","console","checkFlowerImage","flowerImages","Garden","tasks","setTasks","fetchTasks","GardenContainer","children","Content","map","task","index","div","_templateObject","_taggedTemplateLiteral","_templateObject2"],"sources":["/Users/akamurasaki/Desktop/hackathonfinal/hackathon-front-main/src/Garden/Garden.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport background from './garden_back.jpg';\nimport axios from 'axios';\nimport TaskFlower from './TaskFlower/TaskFlower';\n\nimport Tulip_Blooming from './FlowersIMGFile/Tulip/Blooming.png';\nimport Tulip_Half_Blooming from './FlowersIMGFile/Tulip/Half-blooming.png';\nimport Tulip_Withered from './FlowersIMGFile/Tulip/Withered.png';\n\nconst getAllTasks = async () => {\n  try {\n    const response = await axios.get('/api/v1/tasks');\n    return response.data;\n  } catch (error) {\n    console.error('Error getting all tasks:', error);\n    return [];\n  }\n};\n\nconst checkFlowerImage = (flowerImages) => {\n  if (flowerImages === 'tulip') {\n    return Tulip_Blooming;\n  } else if (flowerImages === 'Tulip_Half_Blooming') {\n    return Tulip_Half_Blooming;\n  } else if (flowerImages === 'Tulip_Withered') {\n    return Tulip_Withered;\n  } else {\n    return Tulip_Blooming;\n  }\n};\n\nconst Garden = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const data = await getAllTasks();\n      setTasks(data);\n    };\n    fetchTasks();\n  }, []);\n\n  return (\n    <GardenContainer>\n      <Content>\n        {tasks.map((task, index) => (\n          <TaskFlower key={index} task={task} index={index} checkFlowerImage={checkFlowerImage} />\n        ))}\n      </Content>\n    </GardenContainer>\n  );\n};\n\nconst GardenContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-image: url(${background});\n  background-size: cover;\n  background-position: center;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  text-align: center;\n  color: white;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport default Garden;\n"],"mappings":"yMAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,iBAAiB,CACpC,MAAO,CAAAC,UAAU,KAAM,mBAAmB,CAC1C,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAEhD,MAAO,CAAAC,cAAc,KAAM,qCAAqC,CAChE,MAAO,CAAAC,mBAAmB,KAAM,0CAA0C,CAC1E,MAAO,CAAAC,cAAc,KAAM,qCAAqC,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjE,KAAM,CAAAC,WAAW,CAAG,KAAAA,CAAA,GAAY,CAC9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACS,GAAG,CAAC,eAAe,CAAC,CACjD,MAAO,CAAAD,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,EAAE,CACX,CACF,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAIC,YAAY,EAAK,CACzC,GAAIA,YAAY,GAAK,OAAO,CAAE,CAC5B,MAAO,CAAAZ,cAAc,CACvB,CAAC,IAAM,IAAIY,YAAY,GAAK,qBAAqB,CAAE,CACjD,MAAO,CAAAX,mBAAmB,CAC5B,CAAC,IAAM,IAAIW,YAAY,GAAK,gBAAgB,CAAE,CAC5C,MAAO,CAAAV,cAAc,CACvB,CAAC,IAAM,CACL,MAAO,CAAAF,cAAc,CACvB,CACF,CAAC,CAED,KAAM,CAAAa,MAAM,CAAGA,CAAA,GAAM,CACnB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAEtCD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAsB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAR,IAAI,CAAG,KAAM,CAAAH,WAAW,CAAC,CAAC,CAChCU,QAAQ,CAACP,IAAI,CAAC,CAChB,CAAC,CACDQ,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEZ,IAAA,CAACa,eAAe,EAAAC,QAAA,cACdd,IAAA,CAACe,OAAO,EAAAD,QAAA,CACLJ,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACrBlB,IAAA,CAACL,UAAU,EAAasB,IAAI,CAAEA,IAAK,CAACC,KAAK,CAAEA,KAAM,CAACX,gBAAgB,CAAEA,gBAAiB,EAApEW,KAAsE,CACxF,CAAC,CACK,CAAC,CACK,CAAC,CAEtB,CAAC,CAED,KAAM,CAAAL,eAAe,CAAGrB,MAAM,CAAC2B,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,6MAGR5B,UAAU,CAMnC,CAED,KAAM,CAAAsB,OAAO,CAAGvB,MAAM,CAAC2B,GAAG,CAAAG,gBAAA,GAAAA,gBAAA,CAAAD,sBAAA,kIAOzB,CAED,cAAe,CAAAZ,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}